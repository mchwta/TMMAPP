{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth as firebaseAuth } from './firebase';\n\n// most components will use this,\n// if user is logged in and what is the userId\n// Only used by App to initialize the firebase authentication\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  loggedIn: false\n});\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function useAuthInit() {\n  _s2();\n  const [authInit, setAuthInit] = useState({\n    loading: true\n  });\n  useEffect(() => {\n    return firebaseAuth.onAuthStateChanged(firebaseUser => {\n      // setAuthInit({loading: false, auth: {loggedIn: Boolean(user)}});\n      const auth = firebaseUser ? {\n        loggedIn: true,\n        userId: firebaseUser.uid\n      } : {\n        loggedIn: false\n      };\n      setAuthInit({\n        loading: false,\n        auth\n      });\n    });\n  }, []);\n\n  // const [authState, setAuthInit] = useState<AuthInit>({loading: true});\n  // useEffect(() => {\n  //   return firebaseAuth.onAuthStateChanged((firebaseUser) => {\n  //         const auth = firebaseUser ?\n  //             {loggedIn: true, userId: firebaseUser.uid } :\n  //             {loggedIn: false};\n  //         setAuthInit({loading: false, auth});\n  //   });\n  // }, []);\n  return authInit;\n}\n\n// export function useAuthInit(): AuthInit {\n//   const [authInit, setAuthInit] = useState<AuthInit>({ loading: true, loggedIn: false });\n//     useEffect(() => {\n//       firebaseAuth.onAuthStateChanged((user) => {\n//           setAuthInit({loading: false, loggedIn: Boolean(user)});\n//         });\n//       },[]);\n//   return authInit;\n// }\n_s2(useAuthInit, \"n1nc+QcX/uYJlKNIfN1ntTL3qE0=\");","map":{"version":3,"names":["React","useContext","useEffect","useState","auth","firebaseAuth","AuthContext","createContext","loggedIn","useAuth","_s","useAuthInit","_s2","authInit","setAuthInit","loading","onAuthStateChanged","firebaseUser","userId","uid"],"sources":["/Users/hninwintthuaung/Downloads/DailyMoments/src/auth.ts"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { auth as firebaseAuth } from './firebase'; \r\n\r\n// most components will use this,\r\n// if user is logged in and what is the userId\r\ninterface Auth {\r\n  loggedIn: boolean;\r\n  userId?: string; // ? is optional\r\n}\r\n\r\n// Only used by App to initialize the firebase authentication\r\ninterface AuthInit {\r\n  loading: boolean;\r\n  auth?: Auth;\r\n}\r\n\r\nexport const AuthContext = React.createContext<Auth>({loggedIn:false});\r\n\r\nexport function useAuth(): Auth {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function useAuthInit(): AuthInit {\r\n  const [authInit, setAuthInit] = useState<AuthInit>({loading: true});\r\n  useEffect(() => {\r\n    return firebaseAuth.onAuthStateChanged((firebaseUser) => {\r\n        // setAuthInit({loading: false, auth: {loggedIn: Boolean(user)}});\r\n        const auth = firebaseUser ?\r\n          { loggedIn:  true, userId: firebaseUser.uid} :\r\n          { loggedIn: false };\r\n        setAuthInit({ loading: false, auth});\r\n      });\r\n    },[]);\r\n\r\n  // const [authState, setAuthInit] = useState<AuthInit>({loading: true});\r\n  // useEffect(() => {\r\n  //   return firebaseAuth.onAuthStateChanged((firebaseUser) => {\r\n  //         const auth = firebaseUser ?\r\n  //             {loggedIn: true, userId: firebaseUser.uid } :\r\n  //             {loggedIn: false};\r\n  //         setAuthInit({loading: false, auth});\r\n  //   });\r\n  // }, []);\r\n  return authInit;\r\n}\r\n\r\n// export function useAuthInit(): AuthInit {\r\n//   const [authInit, setAuthInit] = useState<AuthInit>({ loading: true, loggedIn: false });\r\n//     useEffect(() => {\r\n//       firebaseAuth.onAuthStateChanged((user) => {\r\n//           setAuthInit({loading: false, loggedIn: Boolean(user)});\r\n//         });\r\n//       },[]);\r\n//   return authInit;\r\n// }\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,IAAI,IAAIC,YAAY,QAAQ,YAAY;;AAEjD;AACA;AAMA;AAMA,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAa,CAAO;EAACC,QAAQ,EAAC;AAAK,CAAC,CAAC;AAEtE,OAAO,SAASC,OAAOA,CAAA,EAAS;EAAAC,EAAA;EAC5B,OAAOT,UAAU,CAACK,WAAW,CAAC;AAClC;AAACI,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,WAAWA,CAAA,EAAa;EAAAC,GAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAW;IAACY,OAAO,EAAE;EAAI,CAAC,CAAC;EACnEb,SAAS,CAAC,MAAM;IACd,OAAOG,YAAY,CAACW,kBAAkB,CAAEC,YAAY,IAAK;MACrD;MACA,MAAMb,IAAI,GAAGa,YAAY,GACvB;QAAET,QAAQ,EAAG,IAAI;QAAEU,MAAM,EAAED,YAAY,CAACE;MAAG,CAAC,GAC5C;QAAEX,QAAQ,EAAE;MAAM,CAAC;MACrBM,WAAW,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEX;MAAI,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;;EAEP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOS,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAD,GAAA,CAhCgBD,WAAW"},"metadata":{},"sourceType":"module"}