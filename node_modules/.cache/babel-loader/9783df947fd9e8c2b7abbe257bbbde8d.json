{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const dateObject = new Date(date);\n  const dateString = dateObject.toISOString();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n    entriesRef.get().then(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    // convert Firestore Timestamp to JavaScript Date\n    id: entry.id // add the entry id to the event object\n  }));\n\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDayCellContent = arg => {\n    const date = arg.date.toISOString().split('T')[0]; // convert the date to ISO format\n    const entriesOnDate = entries.filter(entry => entry.date.toISOString().split('T')[0] === date);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: entriesOnDate.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, entry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      dayCellContent: handleDayCellContent // attach the custom day cell content function\n      ,\n      lazyFetching: true,\n      height: \"450px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"79ky0+wRV+GoCvG2gWqwbOBZ/CM=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","jsxDEV","_jsxDEV","CalendarContainer","div","_c","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","dateObject","Date","date","dateString","toISOString","entriesRef","collection","doc","get","then","_ref","docs","map","events","entry","title","id","handleEventClick","_ref2","event","push","handleDayCellContent","arg","split","entriesOnDate","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","description","plugins","initialView","eventClick","dayCellContent","lazyFetching","height","_c2","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const dateObject = new Date(date);\nconst dateString = dateObject.toISOString();\n\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n    entriesRef.get().then(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date), // convert Firestore Timestamp to JavaScript Date\n    id: entry.id // add the entry id to the event object\n  }));\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDayCellContent = (arg: any) => {\n    const date = arg.date.toISOString().split('T')[0]; // convert the date to ISO format\n    const entriesOnDate = entries.filter((entry) => entry.date.toISOString().split('T')[0] === date);\n    return (\n      <div>\n        {entriesOnDate.map((entry) => (\n          <div key={entry.id}>\n            <div>{entry.title}</div>\n            <div>{entry.description}</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          events={events}\n          eventClick={handleEventClick}\n          dayCellContent={handleDayCellContent} // attach the custom day cell content function\n          lazyFetching={true}\n          height='450px'\n        />\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}