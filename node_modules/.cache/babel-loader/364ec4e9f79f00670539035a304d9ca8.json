{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst EntriesContainer = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = EntriesContainer;\nconst EntryItem = styled.div`\n  margin: 0.5rem 0;\n`;\n_c3 = EntryItem;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    id: entry.id,\n    classNames: entry.completed ? 'completed' : 'not-completed' // add classNames based on completion status\n  }));\n\n  const filteredEntries = entries.filter(entry => {\n    if (selectedDate) {\n      const entryDate = new Date(entry.date);\n      return entryDate.getFullYear() === selectedDate.getFullYear() && entryDate.getMonth() === selectedDate.getMonth() && entryDate.getDate() === selectedDate.getDate();\n    } else {\n      return true;\n    }\n  });\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDateClick = _ref3 => {\n    let {\n      date\n    } = _ref3;\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: [!loading && /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      onDateClick: handleDateClick // attach the date click event handler\n      ,\n      lazyFetching: true,\n      height: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EntriesContainer, {\n      children: filteredEntries.map(entry => /*#__PURE__*/_jsxDEV(EntryItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: entry.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(entry.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: entry.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, entry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"mqjFktCzRWmiKJ10KTNSnIKNgUk=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c4 = Calendar;\nexport default Calendar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"EntriesContainer\");\n$RefreshReg$(_c3, \"EntryItem\");\n$RefreshReg$(_c4, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","jsxDEV","_jsxDEV","CalendarContainer","div","_c","EntriesContainer","_c2","EntryItem","_c3","Calendar","_s","userId","entries","setEntries","loading","setLoading","selectedDate","setSelectedDate","history","entriesRef","collection","doc","unsubscribe","onSnapshot","_ref","docs","map","events","entry","title","date","Date","id","classNames","completed","filteredEntries","filter","entryDate","getFullYear","getMonth","getDate","handleEventClick","_ref2","event","push","handleDateClick","_ref3","children","plugins","initialView","eventClick","onDateClick","lazyFetching","height","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","body","_c4","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst EntriesContainer = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst EntryItem = styled.div`\n  margin: 0.5rem 0;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    id: entry.id,\n    classNames: entry.completed ? 'completed' : 'not-completed', // add classNames based on completion status\n  }));\n\n  const filteredEntries = entries.filter((entry) => {\n    if (selectedDate) {\n      const entryDate = new Date(entry.date);\n      return (\n        entryDate.getFullYear() === selectedDate.getFullYear() &&\n        entryDate.getMonth() === selectedDate.getMonth() &&\n        entryDate.getDate() === selectedDate.getDate()\n      );\n    } else {\n      return true;\n    }\n  });\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDateClick = ({ date }: { date: Date }) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          events={events}\n          eventClick={handleEventClick}\n          onDateClick={handleDateClick} // attach the date click event handler\n          lazyFetching={true}\n          height=\"500px\"\n        />\n      )}\n      <EntriesContainer>\n        {filteredEntries.map((entry) => (\n          <EntryItem key={entry.id}>\n            <h3>{entry.title}</h3>\n            <p>{new Date(entry.date).toLocaleString()}</p>\n            <p>{entry.body}</p>\n          </EntryItem>\n        ))}\n      </EntriesContainer>\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}