{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst EntriesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n_c2 = EntriesContainer;\nconst EntryCard = styled.div`\n  width: 200px;\n  border: 1px solid black;\n  padding: 1rem;\n`;\n_c3 = EntryCard;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    id: entry.id,\n    classNames: entry.completed ? 'completed' : 'not-completed' // add classNames based on completion status\n  }));\n\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    setSelectedDate(new Date(event.date));\n  };\n  const filteredEntries = selectedDate ? entries.filter(entry => new Date(entry.date).toDateString() === selectedDate.toDateString()) : entries;\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: events,\n        eventClick: handleEventClick // attach the click event handler\n        ,\n        lazyFetching: true // fetch events for the visible range of dates\n        ,\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(EntriesContainer, {\n        children: filteredEntries.map(entry => /*#__PURE__*/_jsxDEV(EntryCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(entry.date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => history.push(`/my/entries/view/${entry.id}`),\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)]\n        }, entry.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"JSx1ARlh35JUDjyJjYEnxs4tRa4=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c4 = Calendar;\nexport default Calendar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"EntriesContainer\");\n$RefreshReg$(_c3, \"EntryCard\");\n$RefreshReg$(_c4, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarContainer","div","_c","EntriesContainer","_c2","EntryCard","_c3","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","selectedDate","setSelectedDate","entriesRef","collection","doc","unsubscribe","onSnapshot","_ref","docs","map","events","entry","title","date","Date","id","classNames","completed","handleEventClick","_ref2","event","filteredEntries","filter","toDateString","children","plugins","initialView","eventClick","lazyFetching","height","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","onClick","push","_c4","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst EntriesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nconst EntryCard = styled.div`\n  width: 200px;\n  border: 1px solid black;\n  padding: 1rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    id: entry.id,\n    classNames: entry.completed ? 'completed' : 'not-completed' // add classNames based on completion status\n  }));\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    setSelectedDate(new Date(event.date));\n  };\n\n  const filteredEntries = selectedDate\n    ? entries.filter(\n        (entry) =>\n          new Date(entry.date).toDateString() === selectedDate.toDateString()\n      )\n    : entries;\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <>\n          <FullCalendar\n            plugins={[dayGridPlugin]}\n            initialView=\"dayGridMonth\"\n            events={events}\n            eventClick={handleEventClick} // attach the click event handler\n            lazyFetching={true} // fetch events for the visible range of dates\n            height=\"500px\"\n          />\n          {selectedDate && (\n            <EntriesContainer>\n              {filteredEntries.map((entry) => (\n                <EntryCard key={entry.id}>\n                  <h3>{entry.title}</h3>\n\n                  <p>{new Date(entry.date).toLocaleString()}</p>\n                  <button\n                    onClick={() =>\n                      history.push(`/my/entries/view/${entry.id}`)\n                    }\n                  >\n                    View\n                  </button>\n                </EntryCard>\n              ))}\n            </EntriesContainer>\n          )}\n        </>\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}