{"ast":null,"code":"var _jsxFileName = \"/Users/toy/Documents/APIU University Work/3rd Year/Mobile Dev/code/ionicproject1/DailyMoments/src/pages/EntryPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonButtons, IonBackButton, IonIcon, IonButton } from \"@ionic/react\";\nimport { trash } from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { useAuth } from \"../auth\";\nimport { firestore } from \"../firebase\";\nimport { toEntry } from \"../models\"; // import dayjs from 'dayjs';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatDate = ISOstring => {\n  const dayjs = require('dayjs');\n\n  const date = dayjs(ISOstring);\n  date.toISOString();\n  return date.format('MMM D YYYY');\n};\n\nconst EntryPage = () => {\n  _s();\n\n  const history = useHistory();\n\n  const handleDelete = () => {\n    firestore.collection(\"users\").doc(userId).collection('entries').doc(entry.id).delete().then(() => {\n      console.log(\"Deleted!\");\n    });\n    history.goBack();\n  };\n\n  const {\n    userId\n  } = useAuth();\n  const match = useRouteMatch();\n  const {\n    id\n  } = match.params;\n  const [entry, setEntry] = useState();\n  useEffect(() => {\n    const entryRef = firestore.collection(\"users\").doc(userId).collection(\"entries\").doc(id);\n    entryRef.get().then(doc => {\n      setEntry(toEntry(doc));\n    });\n  }, [userId, id]);\n  console.log(\"Entry.id:\", entry === null || entry === void 0 ? void 0 : entry.id);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: /*#__PURE__*/_jsxDEV(IonBackButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: [entry === null || entry === void 0 ? void 0 : entry.title, \"     \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n          slot: \"end\",\n          onClick: handleDelete,\n          routerLink: \"/my/entries\",\n          fill: \"clear\",\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            icon: trash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      className: \"ion-padding\",\n      children: [entry === null || entry === void 0 ? void 0 : entry.description, \" : created in #\", formatDate(entry === null || entry === void 0 ? void 0 : entry.date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntryPage, \"q8OIz5/z816isvFE6uS6fGQMSsw=\", false, function () {\n  return [useHistory, useAuth, useRouteMatch];\n});\n\n_c = EntryPage;\nexport default EntryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryPage\");","map":{"version":3,"sources":["/Users/toy/Documents/APIU University Work/3rd Year/Mobile Dev/code/ionicproject1/DailyMoments/src/pages/EntryPage.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonButtons","IonBackButton","IonIcon","IonButton","trash","React","useEffect","useState","useHistory","useRouteMatch","useAuth","firestore","toEntry","formatDate","ISOstring","dayjs","require","date","toISOString","format","EntryPage","history","handleDelete","collection","doc","userId","entry","id","delete","then","console","log","goBack","match","params","setEntry","entryRef","get","title","description"],"mappings":"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","sourcesContent":["import {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonButtons,\n  IonBackButton,\n  IonIcon,\n  IonButton,\n} from \"@ionic/react\";\nimport { trash } from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { useAuth } from \"../auth\";\nimport { firestore } from \"../firebase\";\nimport { Entry, toEntry } from \"../models\";\n// import dayjs from 'dayjs';\n\ninterface RouterParams {\n  id: string;\n}\n\nconst formatDate = (ISOstring: string) => {\n  const dayjs = require('dayjs');\n  const date = dayjs(ISOstring);\n  date.toISOString();\n  return (\n    date.format('MMM D YYYY')\n  );\n}\nconst EntryPage: React.FC = () => {\n\n  const history = useHistory();\n  const handleDelete = () => {\n    firestore.collection(\"users\").doc(userId).collection('entries').doc(entry.id)\n      .delete()\n      .then(() => { console.log(\"Deleted!\") });\n    history.goBack();\n  };\n\n  const { userId } = useAuth();\n  const match = useRouteMatch<RouterParams>();\n  const { id } = match.params;\n  const [entry, setEntry] = useState<Entry>();\n\n  useEffect(() => {\n    const entryRef = firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"entries\")\n      .doc(id);\n    entryRef.get().then((doc) => {\n      setEntry(toEntry(doc));\n    });\n  }, [userId, id]);\n\n  console.log(\"Entry.id:\", entry?.id);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonBackButton />\n          </IonButtons>\n          <IonTitle>\n            {entry?.title}     </IonTitle>\n          <IonButton slot=\"end\" onClick={handleDelete} routerLink=\"/my/entries\" fill=\"clear\">\n            <IonIcon icon={trash} />\n          </IonButton>\n\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent className=\"ion-padding\">\n        {entry?.description} : created in #{formatDate(entry?.date)}\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default EntryPage;\n"]},"metadata":{},"sourceType":"module"}