{"ast":null,"code":"var CapacitorWeb = /** @class */function () {\n  function CapacitorWeb() {\n    var _this = this;\n    this.platform = 'web';\n    this.isNative = false;\n    // Need to assign here to avoid having to define every plugin but still\n    // get the typed benefits of the provided plugins in PluginRegistry\n    this.Plugins = {};\n    // Gracefully degrade in non-Proxy supporting engines, e.g. IE11. This\n    // effectively means that trying to access an unavailable plugin will\n    // locally throw, but this is still better than throwing a syntax error.\n    if (typeof Proxy !== 'undefined') {\n      // Build a proxy for the Plugins object that returns the \"Noop Plugin\"\n      // if a plugin isn't available\n      this.Plugins = new Proxy(this.Plugins, {\n        get: function (target, prop) {\n          if (typeof target[prop] === 'undefined') {\n            var thisRef_1 = _this;\n            return new Proxy({}, {\n              get: function (_target, _prop) {\n                if (typeof _target[_prop] === 'undefined') {\n                  return thisRef_1.pluginMethodNoop.bind(thisRef_1, _target, _prop, prop);\n                } else {\n                  return _target[_prop];\n                }\n              }\n            });\n          } else {\n            return target[prop];\n          }\n        }\n      });\n    }\n  }\n  CapacitorWeb.prototype.pluginMethodNoop = function (_target, _prop, pluginName) {\n    return Promise.reject(pluginName + \" does not have web implementation.\");\n  };\n  CapacitorWeb.prototype.getPlatform = function () {\n    return this.platform;\n  };\n  CapacitorWeb.prototype.isPluginAvailable = function (name) {\n    return this.Plugins.hasOwnProperty(name);\n  };\n  CapacitorWeb.prototype.convertFileSrc = function (filePath) {\n    return filePath;\n  };\n  CapacitorWeb.prototype.handleError = function (e) {\n    console.error(e);\n  };\n  return CapacitorWeb;\n}();\nexport { CapacitorWeb };","map":{"version":3,"names":["CapacitorWeb","_this","platform","isNative","Plugins","Proxy","get","target","prop","thisRef_1","_target","_prop","pluginMethodNoop","bind","prototype","pluginName","Promise","reject","getPlatform","isPluginAvailable","name","hasOwnProperty","convertFileSrc","filePath","handleError","e","console","error"],"sources":["../../src/web-runtime.ts"],"sourcesContent":[null],"mappings":"AAEA,IAAAA,YAAA;EAKE,SAAAA,aAAA;IAAA,IAAAC,KAAA;IAHA,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAC,QAAQ,GAAG,KAAK;IAGd;IACA;IACA,IAAI,CAACC,OAAO,GAAG,EAAS;IAExB;IACA;IACA;IACA,IAAI,OAAOC,KAAK,KAAK,WAAW,EAAE;MAChC;MACA;MACA,IAAI,CAACD,OAAO,GAAG,IAAIC,KAAK,CAAM,IAAI,CAACD,OAAO,EAAE;QAC1CE,GAAG,EAAE,SAAAA,CAACC,MAAM,EAAEC,IAAI;UAChB,IAAI,OAAOD,MAAM,CAACC,IAAI,CAAC,KAAK,WAAW,EAAE;YACvC,IAAIC,SAAO,GAAGR,KAAI;YAClB,OAAO,IAAII,KAAK,CAAM,EAAE,EAAE;cACxBC,GAAG,EAAE,SAAAA,CAACI,OAAO,EAAEC,KAAK;gBAClB,IAAI,OAAOD,OAAO,CAACC,KAAK,CAAC,KAAK,WAAW,EAAE;kBACzC,OAAOF,SAAO,CAACG,gBAAgB,CAACC,IAAI,CAACJ,SAAO,EAAEC,OAAO,EAAEC,KAAK,EAAGH,IAAI,CAAC;iBACrE,MAAM;kBACL,OAAOE,OAAO,CAACC,KAAK,CAAC;;cAEzB;aACD,CAAC;WACH,MAAM;YACL,OAAOJ,MAAM,CAACC,IAAI,CAAC;;QAEvB;OACD,CAAC;;EAEN;EAEAR,YAAA,CAAAc,SAAA,CAAAF,gBAAgB,GAAhB,UAAiBF,OAAY,EAAEC,KAAkB,EAAEI,UAAkB;IACnE,OAAOC,OAAO,CAACC,MAAM,CAAIF,UAAU,uCAAoC,CAAC;EAC1E,CAAC;EAEDf,YAAA,CAAAc,SAAA,CAAAI,WAAW,GAAX;IACE,OAAO,IAAI,CAAChB,QAAQ;EACtB,CAAC;EAEDF,YAAA,CAAAc,SAAA,CAAAK,iBAAiB,GAAjB,UAAkBC,IAAY;IAC5B,OAAO,IAAI,CAAChB,OAAO,CAACiB,cAAc,CAACD,IAAI,CAAC;EAC1C,CAAC;EAEDpB,YAAA,CAAAc,SAAA,CAAAQ,cAAc,GAAd,UAAeC,QAAgB;IAC7B,OAAOA,QAAQ;EACjB,CAAC;EAEDvB,YAAA,CAAAc,SAAA,CAAAU,WAAW,GAAX,UAAYC,CAAQ;IAClBC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EAClB,CAAC;EACH,OAAAzB,YAAC;AAAD,CAAC,EAxDD"},"metadata":{},"sourceType":"module"}