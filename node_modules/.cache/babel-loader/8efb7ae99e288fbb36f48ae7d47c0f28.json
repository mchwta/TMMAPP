{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    // convert Firestore Timestamp to JavaScript Date\n    id: entry.id,\n    // add the entry id to the event object\n    completed: entry.completed // add the completed property to the event object\n  }));\n\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const eventContent = arg => {\n    const {\n      event\n    } = arg;\n\n    // Use blue color for completed 'true' task and green for completed 'false'\n    const backgroundColor = event.extendedProps.completed ? 'blue' : 'green';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-content\",\n        style: {\n          backgroundColor,\n          color: 'white',\n          padding: '5px',\n          borderRadius: '5px'\n        },\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-resizer fc-end-resizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      eventContent: eventContent // attach the custom event content function\n      ,\n      lazyFetching: true,\n      height: \"auto\" // allow the calendar to resize dynamically\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"79ky0+wRV+GoCvG2gWqwbOBZ/CM=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarContainer","div","_c","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","entriesRef","collection","doc","unsubscribe","onSnapshot","_ref","docs","map","events","entry","title","date","Date","id","completed","handleEventClick","_ref2","event","push","eventContent","arg","backgroundColor","extendedProps","children","className","style","color","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","eventClick","lazyFetching","height","_c2","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date), // convert Firestore Timestamp to JavaScript Date\n    id: entry.id, // add the entry id to the event object\n    completed: entry.completed, // add the completed property to the event object\n  }));\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const eventContent = (arg: EventContentArg) => {\n    const { event } = arg;\n\n    // Use blue color for completed 'true' task and green for completed 'false'\n    const backgroundColor = event.extendedProps.completed ? 'blue' : 'green';\n\n    return (\n      <>\n        <div\n          className=\"fc-content\"\n          style={{\n            backgroundColor,\n            color: 'white',\n            padding: '5px',\n            borderRadius: '5px',\n          }}\n        >\n          {event.title}\n        </div>\n        <div className=\"fc-resizer fc-end-resizer\" />\n      </>\n    );\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          events={events}\n          eventClick={handleEventClick}\n          eventContent={eventContent} // attach the custom event content function\n          lazyFetching={true}\n          height=\"auto\" // allow the calendar to resize dynamically\n        />\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}