{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { IonCard, IonCardContent, IonCardHeader, IonCardTitle } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n    entriesRef.get().then(_ref => {\n      let {\n        docs\n      } = _ref;\n      return setEntries(docs.map(toEntry));\n    });\n  }, [userId]);\n  useEffect(() => {\n    if (selectedDate) {\n      const tasksRef = firestore.collection('users').doc(userId).collection('tasks').where('date', '==', selectedDate);\n      tasksRef.get().then(_ref2 => {\n        let {\n          docs\n        } = _ref2;\n        return setTasks(docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })));\n      });\n    }\n  }, [selectedDate, userId]);\n  const handleDateClick = info => {\n    setSelectedDate(info.dateStr);\n  };\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date) // convert Firestore Timestamp to JavaScript Date\n  }));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      selectable: true,\n      dateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: [\"Tasks for \", selectedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Calendar, \"xBAkaqMKeywu4C3G4Hse0tHEMf8=\", false, function () {\n  return [useAuth];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","IonCard","IonCardContent","IonCardHeader","IonCardTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","_s","userId","entries","setEntries","tasks","setTasks","selectedDate","setSelectedDate","entriesRef","collection","doc","get","then","_ref","docs","map","tasksRef","where","_ref2","id","data","handleDateClick","info","dateStr","events","entry","title","date","Date","children","plugins","initialView","selectable","dateClick","fileName","_jsxFileName","lineNumber","columnNumber","className","task","description","_c","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { IonCard, IonCardContent, IonCardHeader, IonCardTitle } from '@ionic/react';\n\ninterface Task {\n  id: string;\n  title: string;\n  description: string;\n}\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [selectedDate, setSelectedDate] = useState<string>('');\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n    entriesRef.get().then(({ docs }) => setEntries(docs.map(toEntry)));\n  }, [userId]);\n\n  useEffect(() => {\n    if (selectedDate) {\n      const tasksRef = firestore\n        .collection('users')\n        .doc(userId)\n        .collection('tasks')\n        .where('date', '==', selectedDate);\n      tasksRef.get().then(({ docs }) => setTasks(docs.map(doc => ({ id: doc.id, ...doc.data() }))));\n    }\n  }, [selectedDate, userId]);\n\n  const handleDateClick = (info: any) => {\n    setSelectedDate(info.dateStr);\n  };\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date), // convert Firestore Timestamp to JavaScript Date\n  }));\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        selectable={true}\n        dateClick={handleDateClick}\n      />\n      {selectedDate && (\n        <div className=\"tasks\">\n          <IonCard>\n            <IonCardHeader>\n              <IonCardTitle>Tasks for {selectedDate}</IonCardTitle>\n            </IonCardHeader>\n            {tasks.map((task) => (\n              <IonCardContent key={task.id}>\n                <h3>{task.title}</h3>\n                <p>{task.description}</p>\n              </IonCardContent>\n            ))}\n          </IonCard>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}