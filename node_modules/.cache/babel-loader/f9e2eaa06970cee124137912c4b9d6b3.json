{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { FilesystemDirectory } from '../core-plugin-definitions';\nvar FilesystemPluginWeb = /** @class */function (_super) {\n  __extends(FilesystemPluginWeb, _super);\n  function FilesystemPluginWeb() {\n    var _this = _super.call(this, {\n      name: 'Filesystem',\n      platforms: ['web']\n    }) || this;\n    _this.DEFAULT_DIRECTORY = FilesystemDirectory.Data;\n    _this.DB_VERSION = 1;\n    _this.DB_NAME = 'Disc';\n    _this._writeCmds = ['add', 'put', 'delete'];\n    return _this;\n  }\n  FilesystemPluginWeb.prototype.initDb = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (this._db !== undefined) {\n          return [2 /*return*/, this._db];\n        }\n        if (!('indexedDB' in window)) {\n          throw new Error('This browser doesn\\'t support IndexedDB');\n        }\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          var request = indexedDB.open(_this.DB_NAME, _this.DB_VERSION);\n          request.onupgradeneeded = FilesystemPluginWeb.doUpgrade;\n          request.onsuccess = function () {\n            _this._db = request.result;\n            resolve(request.result);\n          };\n          request.onerror = function () {\n            return reject(request.error);\n          };\n          request.onblocked = function () {\n            console.warn('db blocked');\n          };\n        })];\n      });\n    });\n  };\n  FilesystemPluginWeb.doUpgrade = function (event) {\n    var eventTarget = event.target;\n    var db = eventTarget.result;\n    switch (event.oldVersion) {\n      case 0:\n      case 1:\n      default:\n        if (db.objectStoreNames.contains('FileStorage')) {\n          db.deleteObjectStore('FileStorage');\n        }\n        var store = db.createObjectStore('FileStorage', {\n          keyPath: 'path'\n        });\n        store.createIndex('by_folder', 'folder');\n    }\n  };\n  FilesystemPluginWeb.prototype.dbRequest = function (cmd, args) {\n    return __awaiter(this, void 0, void 0, function () {\n      var readFlag;\n      return __generator(this, function (_a) {\n        readFlag = this._writeCmds.indexOf(cmd) !== -1 ? 'readwrite' : 'readonly';\n        return [2 /*return*/, this.initDb().then(function (conn) {\n          return new Promise(function (resolve, reject) {\n            var tx = conn.transaction(['FileStorage'], readFlag);\n            var store = tx.objectStore('FileStorage');\n            var req = store[cmd].apply(store, args);\n            req.onsuccess = function () {\n              return resolve(req.result);\n            };\n            req.onerror = function () {\n              return reject(req.error);\n            };\n          });\n        })];\n      });\n    });\n  };\n  FilesystemPluginWeb.prototype.dbIndexRequest = function (indexName, cmd, args) {\n    return __awaiter(this, void 0, void 0, function () {\n      var readFlag;\n      return __generator(this, function (_a) {\n        readFlag = this._writeCmds.indexOf(cmd) !== -1 ? 'readwrite' : 'readonly';\n        return [2 /*return*/, this.initDb().then(function (conn) {\n          return new Promise(function (resolve, reject) {\n            var tx = conn.transaction(['FileStorage'], readFlag);\n            var store = tx.objectStore('FileStorage');\n            var index = store.index(indexName);\n            var req = index[cmd].apply(index, args);\n            req.onsuccess = function () {\n              return resolve(req.result);\n            };\n            req.onerror = function () {\n              return reject(req.error);\n            };\n          });\n        })];\n      });\n    });\n  };\n  FilesystemPluginWeb.prototype.getPath = function (directory, uriPath) {\n    directory = directory || this.DEFAULT_DIRECTORY;\n    var cleanedUriPath = uriPath !== undefined ? uriPath.replace(/^[/]+|[/]+$/g, '') : '';\n    var fsPath = '/' + directory;\n    if (uriPath !== '') fsPath += '/' + cleanedUriPath;\n    return fsPath;\n  };\n  FilesystemPluginWeb.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var conn, tx, store;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.initDb()];\n          case 1:\n            conn = _a.sent();\n            tx = conn.transaction(['FileStorage'], 'readwrite');\n            store = tx.objectStore('FileStorage');\n            store.clear();\n            return [2 /*return*/, {}];\n        }\n      });\n    });\n  };\n  /**\n   * Read a file from disk\n   * @param options options for the file read\n   * @return a promise that resolves with the read file data result\n   */\n  FilesystemPluginWeb.prototype.readFile = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, entry;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 1:\n            entry = _a.sent();\n            if (entry === undefined) throw Error('File does not exist.');\n            return [2 /*return*/, {\n              data: entry.content\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Write a file to disk in the specified location on device\n   * @param options options for the file write\n   * @return a promise that resolves with the file write result\n   */\n  FilesystemPluginWeb.prototype.writeFile = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, data, doRecursive, occupiedEntry, encoding, parentPath, parentEntry, subDirIndex, parentArgPath, now, pathObj;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            data = options.data;\n            doRecursive = options.recursive;\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 1:\n            occupiedEntry = _a.sent();\n            if (occupiedEntry && occupiedEntry.type === 'directory') throw 'The supplied path is a directory.';\n            encoding = options.encoding;\n            parentPath = path.substr(0, path.lastIndexOf('/'));\n            return [4 /*yield*/, this.dbRequest('get', [parentPath])];\n          case 2:\n            parentEntry = _a.sent();\n            if (!(parentEntry === undefined)) return [3 /*break*/, 4];\n            subDirIndex = parentPath.indexOf('/', 1);\n            if (!(subDirIndex !== -1)) return [3 /*break*/, 4];\n            parentArgPath = parentPath.substr(subDirIndex);\n            return [4 /*yield*/, this.mkdir({\n              path: parentArgPath,\n              directory: options.directory,\n              recursive: doRecursive\n            })];\n          case 3:\n            _a.sent();\n            _a.label = 4;\n          case 4:\n            now = Date.now();\n            pathObj = {\n              path: path,\n              folder: parentPath,\n              type: 'file',\n              size: data.length,\n              ctime: now,\n              mtime: now,\n              content: !encoding && data.indexOf(',') >= 0 ? data.split(',')[1] : data\n            };\n            return [4 /*yield*/, this.dbRequest('put', [pathObj])];\n          case 5:\n            _a.sent();\n            return [2 /*return*/, {\n              uri: pathObj.path\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Append to a file on disk in the specified location on device\n   * @param options options for the file append\n   * @return a promise that resolves with the file write result\n   */\n  FilesystemPluginWeb.prototype.appendFile = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, data, parentPath, now, ctime, occupiedEntry, parentEntry, subDirIndex, parentArgPath, pathObj;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            data = options.data;\n            parentPath = path.substr(0, path.lastIndexOf('/'));\n            now = Date.now();\n            ctime = now;\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 1:\n            occupiedEntry = _a.sent();\n            if (occupiedEntry && occupiedEntry.type === 'directory') throw 'The supplied path is a directory.';\n            return [4 /*yield*/, this.dbRequest('get', [parentPath])];\n          case 2:\n            parentEntry = _a.sent();\n            if (!(parentEntry === undefined)) return [3 /*break*/, 4];\n            subDirIndex = parentPath.indexOf('/', 1);\n            if (!(subDirIndex !== -1)) return [3 /*break*/, 4];\n            parentArgPath = parentPath.substr(subDirIndex);\n            return [4 /*yield*/, this.mkdir({\n              path: parentArgPath,\n              directory: options.directory,\n              recursive: true\n            })];\n          case 3:\n            _a.sent();\n            _a.label = 4;\n          case 4:\n            if (occupiedEntry !== undefined) {\n              data = occupiedEntry.content + data;\n              ctime = occupiedEntry.ctime;\n            }\n            pathObj = {\n              path: path,\n              folder: parentPath,\n              type: 'file',\n              size: data.length,\n              ctime: ctime,\n              mtime: now,\n              content: data\n            };\n            return [4 /*yield*/, this.dbRequest('put', [pathObj])];\n          case 5:\n            _a.sent();\n            return [2 /*return*/, {}];\n        }\n      });\n    });\n  };\n  /**\n   * Delete a file from disk\n   * @param options options for the file delete\n   * @return a promise that resolves with the deleted file data result\n   */\n  FilesystemPluginWeb.prototype.deleteFile = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, entry, entries;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 1:\n            entry = _a.sent();\n            if (entry === undefined) throw Error('File does not exist.');\n            return [4 /*yield*/, this.dbIndexRequest('by_folder', 'getAllKeys', [IDBKeyRange.only(path)])];\n          case 2:\n            entries = _a.sent();\n            if (entries.length !== 0) throw Error('Folder is not empty.');\n            return [4 /*yield*/, this.dbRequest('delete', [path])];\n          case 3:\n            _a.sent();\n            return [2 /*return*/, {}];\n        }\n      });\n    });\n  };\n  /**\n   * Create a directory.\n   * @param options options for the mkdir\n   * @return a promise that resolves with the mkdir result\n   */\n  FilesystemPluginWeb.prototype.mkdir = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, doRecursive, parentPath, depth, parentEntry, occupiedEntry, parentArgPath, now, pathObj;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            doRecursive = options.recursive;\n            parentPath = path.substr(0, path.lastIndexOf('/'));\n            depth = (path.match(/\\//g) || []).length;\n            return [4 /*yield*/, this.dbRequest('get', [parentPath])];\n          case 1:\n            parentEntry = _a.sent();\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 2:\n            occupiedEntry = _a.sent();\n            if (depth === 1) throw Error('Cannot create Root directory');\n            if (occupiedEntry !== undefined) throw Error('Current directory does already exist.');\n            if (!doRecursive && depth !== 2 && parentEntry === undefined) throw Error('Parent directory must exist');\n            if (!(doRecursive && depth !== 2 && parentEntry === undefined)) return [3 /*break*/, 4];\n            parentArgPath = parentPath.substr(parentPath.indexOf('/', 1));\n            return [4 /*yield*/, this.mkdir({\n              path: parentArgPath,\n              directory: options.directory,\n              recursive: doRecursive\n            })];\n          case 3:\n            _a.sent();\n            _a.label = 4;\n          case 4:\n            now = Date.now();\n            pathObj = {\n              path: path,\n              folder: parentPath,\n              type: 'directory',\n              size: 0,\n              ctime: now,\n              mtime: now\n            };\n            return [4 /*yield*/, this.dbRequest('put', [pathObj])];\n          case 5:\n            _a.sent();\n            return [2 /*return*/, {}];\n        }\n      });\n    });\n  };\n  /**\n   * Remove a directory\n   * @param options the options for the directory remove\n   */\n  FilesystemPluginWeb.prototype.rmdir = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, directory, recursive, fullPath, entry, readDirResult, _i, _a, entry_1, entryPath, entryObj;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            path = options.path, directory = options.directory, recursive = options.recursive;\n            fullPath = this.getPath(directory, path);\n            return [4 /*yield*/, this.dbRequest('get', [fullPath])];\n          case 1:\n            entry = _b.sent();\n            if (entry === undefined) throw Error('Folder does not exist.');\n            if (entry.type !== 'directory') throw Error('Requested path is not a directory');\n            return [4 /*yield*/, this.readdir({\n              path: path,\n              directory: directory\n            })];\n          case 2:\n            readDirResult = _b.sent();\n            if (readDirResult.files.length !== 0 && !recursive) throw Error('Folder is not empty');\n            _i = 0, _a = readDirResult.files;\n            _b.label = 3;\n          case 3:\n            if (!(_i < _a.length)) return [3 /*break*/, 9];\n            entry_1 = _a[_i];\n            entryPath = path + \"/\" + entry_1;\n            return [4 /*yield*/, this.stat({\n              path: entryPath,\n              directory: directory\n            })];\n          case 4:\n            entryObj = _b.sent();\n            if (!(entryObj.type === 'file')) return [3 /*break*/, 6];\n            return [4 /*yield*/, this.deleteFile({\n              path: entryPath,\n              directory: directory\n            })];\n          case 5:\n            _b.sent();\n            return [3 /*break*/, 8];\n          case 6:\n            return [4 /*yield*/, this.rmdir({\n              path: entryPath,\n              directory: directory,\n              recursive: recursive\n            })];\n          case 7:\n            _b.sent();\n            _b.label = 8;\n          case 8:\n            _i++;\n            return [3 /*break*/, 3];\n          case 9:\n            return [4 /*yield*/, this.dbRequest('delete', [fullPath])];\n          case 10:\n            _b.sent();\n            return [2 /*return*/, {}];\n        }\n      });\n    });\n  };\n  /**\n   * Return a list of files from the directory (not recursive)\n   * @param options the options for the readdir operation\n   * @return a promise that resolves with the readdir directory listing result\n   */\n  FilesystemPluginWeb.prototype.readdir = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, entry, entries, names;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 1:\n            entry = _a.sent();\n            if (options.path !== '' && entry === undefined) throw Error('Folder does not exist.');\n            return [4 /*yield*/, this.dbIndexRequest('by_folder', 'getAllKeys', [IDBKeyRange.only(path)])];\n          case 2:\n            entries = _a.sent();\n            names = entries.map(function (e) {\n              return e.substring(path.length + 1);\n            });\n            return [2 /*return*/, {\n              files: names\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Return full File URI for a path and directory\n   * @param options the options for the stat operation\n   * @return a promise that resolves with the file stat result\n   */\n  FilesystemPluginWeb.prototype.getUri = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, entry;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 1:\n            entry = _a.sent();\n            if (!(entry === undefined)) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.dbRequest('get', [path + '/'])];\n          case 2:\n            entry = _a.sent();\n            _a.label = 3;\n          case 3:\n            if (entry === undefined) throw Error('Entry does not exist.');\n            return [2 /*return*/, {\n              uri: entry.path\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Return data about a file\n   * @param options the options for the stat operation\n   * @return a promise that resolves with the file stat result\n   */\n  FilesystemPluginWeb.prototype.stat = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, entry;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            path = this.getPath(options.directory, options.path);\n            return [4 /*yield*/, this.dbRequest('get', [path])];\n          case 1:\n            entry = _a.sent();\n            if (!(entry === undefined)) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.dbRequest('get', [path + '/'])];\n          case 2:\n            entry = _a.sent();\n            _a.label = 3;\n          case 3:\n            if (entry === undefined) throw Error('Entry does not exist.');\n            return [2 /*return*/, {\n              type: entry.type,\n              size: entry.size,\n              ctime: entry.ctime,\n              mtime: entry.mtime,\n              uri: entry.path\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Rename a file or directory\n   * @param options the options for the rename operation\n   * @return a promise that resolves with the rename result\n   */\n  FilesystemPluginWeb.prototype.rename = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this._copy(options, true)];\n      });\n    });\n  };\n  /**\n   * Copy a file or directory\n   * @param options the options for the copy operation\n   * @return a promise that resolves with the copy result\n   */\n  FilesystemPluginWeb.prototype.copy = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this._copy(options, false)];\n      });\n    });\n  };\n  /**\n   * Function that can perform a copy or a rename\n   * @param options the options for the rename operation\n   * @param doRename whether to perform a rename or copy operation\n   * @return a promise that resolves with the result\n   */\n  FilesystemPluginWeb.prototype._copy = function (options, doRename) {\n    if (doRename === void 0) {\n      doRename = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var to, from, fromDirectory, toDirectory, fromPath, toPath, toObj, e_1, toPathComponents, toPath_1, toParentDirectory, fromObj, updateTime, _a, file, e_2, contents, _i, contents_1, filename;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            to = options.to, from = options.from, fromDirectory = options.directory, toDirectory = options.toDirectory;\n            if (!to || !from) {\n              throw Error('Both to and from must be provided');\n            }\n            // If no \"to\" directory is provided, use the \"from\" directory\n            if (!toDirectory) {\n              toDirectory = fromDirectory;\n            }\n            fromPath = this.getPath(fromDirectory, from);\n            toPath = this.getPath(toDirectory, to);\n            // Test that the \"to\" and \"from\" locations are different\n            if (fromPath === toPath) {\n              return [2 /*return*/, {}];\n            }\n            if (toPath.startsWith(fromPath)) {\n              throw Error('To path cannot contain the from path');\n            }\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 6]);\n            return [4 /*yield*/, this.stat({\n              path: to,\n              directory: toDirectory\n            })];\n          case 2:\n            toObj = _b.sent();\n            return [3 /*break*/, 6];\n          case 3:\n            e_1 = _b.sent();\n            toPathComponents = to.split('/');\n            toPathComponents.pop();\n            toPath_1 = toPathComponents.join('/');\n            if (!(toPathComponents.length > 0)) return [3 /*break*/, 5];\n            return [4 /*yield*/, this.stat({\n              path: toPath_1,\n              directory: toDirectory\n            })];\n          case 4:\n            toParentDirectory = _b.sent();\n            if (toParentDirectory.type !== 'directory') {\n              throw new Error('Parent directory of the to path is a file');\n            }\n            _b.label = 5;\n          case 5:\n            return [3 /*break*/, 6];\n          case 6:\n            // Cannot overwrite a directory\n            if (toObj && toObj.type === 'directory') {\n              throw new Error('Cannot overwrite a directory with a file');\n            }\n            return [4 /*yield*/, this.stat({\n              path: from,\n              directory: fromDirectory\n            })];\n          case 7:\n            fromObj = _b.sent();\n            updateTime = function updateTime(path, ctime, mtime) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var fullPath, entry;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      fullPath = this.getPath(toDirectory, path);\n                      return [4 /*yield*/, this.dbRequest('get', [fullPath])];\n                    case 1:\n                      entry = _a.sent();\n                      entry.ctime = ctime;\n                      entry.mtime = mtime;\n                      return [4 /*yield*/, this.dbRequest('put', [entry])];\n                    case 2:\n                      _a.sent();\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            };\n\n            _a = fromObj.type;\n            switch (_a) {\n              case 'file':\n                return [3 /*break*/, 8];\n              case 'directory':\n                return [3 /*break*/, 15];\n            }\n            return [3 /*break*/, 28];\n          case 8:\n            return [4 /*yield*/, this.readFile({\n              path: from,\n              directory: fromDirectory\n            })];\n          case 9:\n            file = _b.sent();\n            if (!doRename) return [3 /*break*/, 11];\n            return [4 /*yield*/, this.deleteFile({\n              path: from,\n              directory: fromDirectory\n            })];\n          case 10:\n            _b.sent();\n            _b.label = 11;\n          case 11:\n            // Write the file to the new location\n            return [4 /*yield*/, this.writeFile({\n              path: to,\n              directory: toDirectory,\n              data: file.data\n            })];\n          case 12:\n            // Write the file to the new location\n            _b.sent();\n            if (!doRename) return [3 /*break*/, 14];\n            return [4 /*yield*/, updateTime(to, fromObj.ctime, fromObj.mtime)];\n          case 13:\n            _b.sent();\n            _b.label = 14;\n          case 14:\n            // Resolve promise\n            return [2 /*return*/, {}];\n          case 15:\n            if (toObj) {\n              throw Error('Cannot move a directory over an existing object');\n            }\n            _b.label = 16;\n          case 16:\n            _b.trys.push([16, 20,, 21]);\n            // Create the to directory\n            return [4 /*yield*/, this.mkdir({\n              path: to,\n              directory: toDirectory,\n              recursive: false\n            })];\n          case 17:\n            // Create the to directory\n            _b.sent();\n            if (!doRename) return [3 /*break*/, 19];\n            return [4 /*yield*/, updateTime(to, fromObj.ctime, fromObj.mtime)];\n          case 18:\n            _b.sent();\n            _b.label = 19;\n          case 19:\n            return [3 /*break*/, 21];\n          case 20:\n            e_2 = _b.sent();\n            return [3 /*break*/, 21];\n          case 21:\n            return [4 /*yield*/, this.readdir({\n              path: from,\n              directory: fromDirectory\n            })];\n          case 22:\n            contents = _b.sent().files;\n            _i = 0, contents_1 = contents;\n            _b.label = 23;\n          case 23:\n            if (!(_i < contents_1.length)) return [3 /*break*/, 26];\n            filename = contents_1[_i];\n            // Move item from the from directory to the to directory\n            return [4 /*yield*/, this._copy({\n              from: from + \"/\" + filename,\n              to: to + \"/\" + filename,\n              directory: fromDirectory,\n              toDirectory: toDirectory\n            }, doRename)];\n          case 24:\n            // Move item from the from directory to the to directory\n            _b.sent();\n            _b.label = 25;\n          case 25:\n            _i++;\n            return [3 /*break*/, 23];\n          case 26:\n            if (!doRename) return [3 /*break*/, 28];\n            return [4 /*yield*/, this.rmdir({\n              path: from,\n              directory: fromDirectory\n            })];\n          case 27:\n            _b.sent();\n            _b.label = 28;\n          case 28:\n            return [2 /*return*/, {}];\n        }\n      });\n    });\n  };\n  FilesystemPluginWeb._debug = true;\n  return FilesystemPluginWeb;\n}(WebPlugin);\nexport { FilesystemPluginWeb };\nvar Filesystem = new FilesystemPluginWeb();\nexport { Filesystem };","map":{"version":3,"names":["WebPlugin","FilesystemDirectory","FilesystemPluginWeb","_super","__extends","_this","call","name","platforms","DEFAULT_DIRECTORY","Data","DB_VERSION","DB_NAME","_writeCmds","prototype","initDb","_db","undefined","window","Error","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","doUpgrade","onsuccess","result","onerror","error","onblocked","console","warn","event","eventTarget","target","db","oldVersion","objectStoreNames","contains","deleteObjectStore","store","createObjectStore","keyPath","createIndex","dbRequest","cmd","args","readFlag","indexOf","then","conn","tx","transaction","objectStore","req","apply","dbIndexRequest","indexName","index","getPath","directory","uriPath","cleanedUriPath","replace","fsPath","clear","_a","sent","readFile","options","path","entry","data","content","writeFile","doRecursive","recursive","occupiedEntry","type","encoding","parentPath","substr","lastIndexOf","parentEntry","subDirIndex","parentArgPath","mkdir","now","Date","pathObj","folder","size","length","ctime","mtime","split","uri","appendFile","deleteFile","IDBKeyRange","only","entries","depth","match","rmdir","fullPath","_b","readdir","readDirResult","files","_i","entry_1","entryPath","stat","entryObj","names","map","e","substring","getUri","rename","_copy","copy","doRename","to","from","fromDirectory","toDirectory","fromPath","toPath","startsWith","toObj","toPathComponents","pop","toPath_1","join","toParentDirectory","fromObj","updateTime","__awaiter","file","contents","contents_1","filename","_debug","Filesystem"],"sources":["../../../src/web/filesystem.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}