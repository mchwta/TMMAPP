{"ast":null,"code":"import _slicedToArray from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _assertThisInitialized from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/hninwintthuaung/Desktop/tester/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __rest } from 'tslib';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport React from 'react';\nimport { matchPath as matchPath$1, withRouter, Router } from 'react-router-dom';\nimport { ViewStacks, generateId, IonRoute, ViewLifeCycleManager, StackContext, RouteManagerContext, getConfig, LocationHistory, NavManager } from '@ionic/react';\nimport { Route, matchPath, Router as Router$1 } from 'react-router';\nvar IonRouteInner = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(IonRouteInner, _React$PureComponent);\n  var _super = _createSuper(IonRouteInner);\n  function IonRouteInner() {\n    _classCallCheck(this, IonRouteInner);\n    return _super.apply(this, arguments);\n  }\n  _createClass(IonRouteInner, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Route, {\n        path: this.props.path,\n        exact: this.props.exact,\n        render: this.props.render,\n        computedMatch: this.props.computedMatch\n      });\n    }\n  }]);\n  return IonRouteInner;\n}(React.PureComponent);\nvar ReactRouterViewStack = /*#__PURE__*/function (_ViewStacks) {\n  _inherits(ReactRouterViewStack, _ViewStacks);\n  var _super2 = _createSuper(ReactRouterViewStack);\n  function ReactRouterViewStack() {\n    var _this;\n    _classCallCheck(this, ReactRouterViewStack);\n    _this = _super2.call(this);\n    _this.createViewItem = _this.createViewItem.bind(_assertThisInitialized(_this));\n    _this.findViewItemByRouteInfo = _this.findViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.findLeavingViewItemByRouteInfo = _this.findLeavingViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.getChildrenToRender = _this.getChildrenToRender.bind(_assertThisInitialized(_this));\n    _this.findViewItemByPathname = _this.findViewItemByPathname.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(ReactRouterViewStack, [{\n    key: \"createViewItem\",\n    value: function createViewItem(outletId, reactElement, routeInfo, page) {\n      var viewItem = {\n        id: generateId('viewItem'),\n        outletId: outletId,\n        ionPageElement: page,\n        reactElement: reactElement,\n        mount: true,\n        ionRoute: false\n      };\n      var matchProps = {\n        exact: reactElement.props.exact,\n        path: reactElement.props.path || reactElement.props.from,\n        component: reactElement.props.component\n      };\n      var match = matchPath(routeInfo.pathname, matchProps);\n      if (reactElement.type === IonRoute) {\n        viewItem.ionRoute = true;\n        viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n      }\n      viewItem.routeData = {\n        match: match,\n        childProps: reactElement.props\n      };\n      return viewItem;\n    }\n  }, {\n    key: \"getChildrenToRender\",\n    value: function getChildrenToRender(outletId, ionRouterOutlet, routeInfo) {\n      var _this2 = this;\n      var viewItems = this.getViewItemsForOutlet(outletId);\n      // Sync latest routes with viewItems\n      React.Children.forEach(ionRouterOutlet.props.children, function (child) {\n        var viewItem = viewItems.find(function (v) {\n          return matchComponent$1(child, v.routeData.childProps.path || v.routeData.childProps.from);\n        });\n        if (viewItem) {\n          viewItem.reactElement = child;\n        }\n      });\n      var children = viewItems.map(function (viewItem) {\n        var clonedChild;\n        if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n        } else {\n          var match = matchComponent$1(viewItem.reactElement, routeInfo.pathname);\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n          if (!match && viewItem.routeData.match) {\n            viewItem.routeData.match = undefined;\n            viewItem.mount = false;\n          }\n        }\n        return clonedChild;\n      });\n      return children;\n    }\n  }, {\n    key: \"findViewItemByRouteInfo\",\n    value: function findViewItemByRouteInfo(routeInfo, outletId) {\n      var _this$findViewItemByP = this.findViewItemByPath(routeInfo.pathname, outletId),\n        viewItem = _this$findViewItemByP.viewItem,\n        match = _this$findViewItemByP.match;\n      if (viewItem && match) {\n        viewItem.routeData.match = match;\n      }\n      return viewItem;\n    }\n  }, {\n    key: \"findLeavingViewItemByRouteInfo\",\n    value: function findLeavingViewItemByRouteInfo(routeInfo, outletId) {\n      var mustBeIonRoute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _this$findViewItemByP2 = this.findViewItemByPath(routeInfo.lastPathname, outletId, false, mustBeIonRoute),\n        viewItem = _this$findViewItemByP2.viewItem;\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPathname\",\n    value: function findViewItemByPathname(pathname, outletId) {\n      var _this$findViewItemByP3 = this.findViewItemByPath(pathname, outletId),\n        viewItem = _this$findViewItemByP3.viewItem;\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPath\",\n    value: function findViewItemByPath(pathname, outletId, forceExact, mustBeIonRoute) {\n      var viewItem;\n      var match;\n      var viewStack;\n      if (outletId) {\n        viewStack = this.getViewItemsForOutlet(outletId);\n        viewStack.some(matchView);\n        if (!viewItem) {\n          viewStack.some(matchDefaultRoute);\n        }\n      } else {\n        var viewItems = this.getAllViewItems();\n        viewItems.some(matchView);\n        if (!viewItem) {\n          viewItems.some(matchDefaultRoute);\n        }\n      }\n      return {\n        viewItem: viewItem,\n        match: match\n      };\n      function matchView(v) {\n        if (mustBeIonRoute && !v.ionRoute) {\n          return false;\n        }\n        var matchProps = {\n          exact: forceExact ? true : v.routeData.childProps.exact,\n          path: v.routeData.childProps.path || v.routeData.childProps.from,\n          component: v.routeData.childProps.component\n        };\n        var myMatch = matchPath(pathname, matchProps);\n        if (myMatch) {\n          viewItem = v;\n          match = myMatch;\n          return true;\n        }\n        return false;\n      }\n      function matchDefaultRoute(v) {\n        // try to find a route that doesn't have a path or from prop, that will be our default route\n        if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n          match = {\n            path: pathname,\n            url: pathname,\n            isExact: true,\n            params: {}\n          };\n          viewItem = v;\n          return true;\n        }\n        return false;\n      }\n    }\n  }]);\n  return ReactRouterViewStack;\n}(ViewStacks);\nfunction matchComponent$1(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath(pathname, matchProps);\n  return match;\n}\nfunction clonePageElement(leavingViewHtml) {\n  var html;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    var newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    var ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild;\n  }\n  return undefined;\n}\nvar StackManager = /*#__PURE__*/function (_React$PureComponent2) {\n  _inherits(StackManager, _React$PureComponent2);\n  var _super3 = _createSuper(StackManager);\n  function StackManager(props) {\n    var _this3;\n    _classCallCheck(this, StackManager);\n    _this3 = _super3.call(this, props);\n    _this3.stackContextValue = {\n      registerIonPage: _this3.registerIonPage.bind(_assertThisInitialized(_this3)),\n      isInOutlet: function isInOutlet() {\n        return true;\n      }\n    };\n    _this3.registerIonPage = _this3.registerIonPage.bind(_assertThisInitialized(_this3));\n    _this3.transitionPage = _this3.transitionPage.bind(_assertThisInitialized(_this3));\n    _this3.handlePageTransition = _this3.handlePageTransition.bind(_assertThisInitialized(_this3));\n    _this3.id = generateId('routerOutlet');\n    return _this3;\n  }\n  _createClass(StackManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.routerOutletElement) {\n        this.setupRouterOutlet(this.routerOutletElement);\n        // console.log(`SM Mount - ${this.routerOutletElement.id} (${this.id})`);\n        this.handlePageTransition(this.props.routeInfo);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.routeInfo.pathname !== prevProps.routeInfo.pathname) {\n        this.handlePageTransition(this.props.routeInfo);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // console.log(`SM UNMount - ${(this.routerOutletElement?.id as any).id} (${this.id})`);\n      this.context.clearOutlet(this.id);\n    }\n  }, {\n    key: \"handlePageTransition\",\n    value: function () {\n      var _handlePageTransition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(routeInfo) {\n        var _this4 = this;\n        var _a, _b, enteringViewItem, leavingViewItem, enteringRoute;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // If routerOutlet isn't quite ready, give it another try in a moment\n                if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n                  setTimeout(function () {\n                    return _this4.handlePageTransition(routeInfo);\n                  }, 10);\n                } else {\n                  enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n                  leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n                  if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n                    leavingViewItem = this.context.findViewItemByPathname(routeInfo.prevRouteLastPathname, this.id);\n                  }\n                  // Check if leavingViewItem should be unmounted\n                  if (leavingViewItem) {\n                    if (routeInfo.routeAction === 'replace') {\n                      leavingViewItem.mount = false;\n                    } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n                      if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n                        leavingViewItem.mount = false;\n                      }\n                    } else if ((_a = routeInfo.routeOptions) === null || _a === void 0 ? void 0 : _a.unmount) {\n                      leavingViewItem.mount = false;\n                    }\n                  }\n                  enteringRoute = matchRoute((_b = this.ionRouterOutlet) === null || _b === void 0 ? void 0 : _b.props.children, routeInfo);\n                  if (enteringViewItem) {\n                    enteringViewItem.reactElement = enteringRoute;\n                  }\n                  if (!enteringViewItem) {\n                    if (enteringRoute) {\n                      enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n                      this.context.addViewItem(enteringViewItem);\n                    }\n                  }\n                  if (enteringViewItem && enteringViewItem.ionPageElement) {\n                    this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n                  } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n                    // If we have a leavingView but no entering view/route, we are probably leaving to\n                    // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n                    // transition to finish.\n                    // setTimeout(() => {\n                    if (leavingViewItem.ionPageElement) {\n                      leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                      leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n                    }\n                    // }, 250);\n                  }\n\n                  this.forceUpdate();\n                }\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function handlePageTransition(_x) {\n        return _handlePageTransition.apply(this, arguments);\n      }\n      return handlePageTransition;\n    }()\n  }, {\n    key: \"registerIonPage\",\n    value: function registerIonPage(page, routeInfo) {\n      var foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      if (foundView) {\n        foundView.ionPageElement = page;\n        foundView.ionRoute = true;\n      }\n      this.handlePageTransition(routeInfo);\n    }\n  }, {\n    key: \"setupRouterOutlet\",\n    value: function () {\n      var _setupRouterOutlet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(routerOutlet) {\n        var _this5 = this;\n        var canStart, onStart;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                canStart = function canStart() {\n                  var config = getConfig();\n                  var swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n                  if (swipeEnabled) {\n                    return _this5.context.canGoBack();\n                  } else {\n                    return false;\n                  }\n                };\n                onStart = function onStart() {\n                  _this5.context.goBack();\n                };\n                routerOutlet.swipeHandler = {\n                  canStart: canStart,\n                  onStart: onStart,\n                  onEnd: function onEnd(_shouldContinue) {\n                    return true;\n                  }\n                };\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      function setupRouterOutlet(_x2) {\n        return _setupRouterOutlet.apply(this, arguments);\n      }\n      return setupRouterOutlet;\n    }()\n  }, {\n    key: \"transitionPage\",\n    value: function () {\n      var _transitionPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(routeInfo, enteringViewItem, leavingViewItem) {\n        var routerOutlet, direction, match, newLeavingElement, runCommit, _runCommit;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _runCommit = function _runCommit3() {\n                  _runCommit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(enteringEl, leavingEl) {\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            enteringEl.classList.add('ion-page');\n                            enteringEl.classList.add('ion-page-invisible');\n                            _context3.next = 4;\n                            return routerOutlet.commit(enteringEl, leavingEl, {\n                              deepWait: true,\n                              duration: direction === undefined ? 0 : undefined,\n                              direction: direction,\n                              showGoBack: !!routeInfo.pushedByRoute,\n                              progressAnimation: false,\n                              animationBuilder: routeInfo.routeAnimation\n                            });\n                          case 4:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                  return _runCommit.apply(this, arguments);\n                };\n                runCommit = function _runCommit2(_x6, _x7) {\n                  return _runCommit.apply(this, arguments);\n                };\n                routerOutlet = this.routerOutletElement;\n                direction = routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root' ? undefined : routeInfo.routeDirection;\n                if (!(enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement)) {\n                  _context4.next = 23;\n                  break;\n                }\n                if (!(leavingViewItem && leavingViewItem.ionPageElement && enteringViewItem === leavingViewItem)) {\n                  _context4.next = 20;\n                  break;\n                }\n                // If a page is transitioning to another version of itself\n                // we clone it so we can have an animation to show\n                match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n                if (!match) {\n                  _context4.next = 16;\n                  break;\n                }\n                newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n                if (!newLeavingElement) {\n                  _context4.next = 14;\n                  break;\n                }\n                this.routerOutletElement.appendChild(newLeavingElement);\n                _context4.next = 13;\n                return runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n              case 13:\n                this.routerOutletElement.removeChild(newLeavingElement);\n              case 14:\n                _context4.next = 18;\n                break;\n              case 16:\n                _context4.next = 18;\n                return runCommit(enteringViewItem.ionPageElement, undefined);\n              case 18:\n                _context4.next = 23;\n                break;\n              case 20:\n                _context4.next = 22;\n                return runCommit(enteringViewItem.ionPageElement, leavingViewItem === null || leavingViewItem === void 0 ? void 0 : leavingViewItem.ionPageElement);\n              case 22:\n                if (leavingViewItem && leavingViewItem.ionPageElement) {\n                  leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                  leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n                }\n              case 23:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function transitionPage(_x3, _x4, _x5) {\n        return _transitionPage.apply(this, arguments);\n      }\n      return transitionPage;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n      var children = this.props.children;\n      var ionRouterOutlet = React.Children.only(children);\n      this.ionRouterOutlet = ionRouterOutlet;\n      var components = this.context.getChildrenToRender(this.id, this.ionRouterOutlet, this.props.routeInfo, function () {\n        _this6.forceUpdate();\n      });\n      return React.createElement(StackContext.Provider, {\n        value: this.stackContextValue\n      }, React.cloneElement(ionRouterOutlet, {\n        ref: function ref(node) {\n          if (ionRouterOutlet.props.setRef) {\n            ionRouterOutlet.props.setRef(node);\n          }\n          if (ionRouterOutlet.props.forwardedRef) {\n            ionRouterOutlet.props.forwardedRef.current = node;\n          }\n          _this6.routerOutletElement = node;\n          var ref = ionRouterOutlet.ref;\n          if (typeof ref === 'function') {\n            ref(node);\n          }\n        }\n      }, components));\n    }\n  }], [{\n    key: \"contextType\",\n    get: function get() {\n      return RouteManagerContext;\n    }\n  }]);\n  return StackManager;\n}(React.PureComponent);\nfunction matchRoute(node, routeInfo) {\n  var matchedNode;\n  React.Children.forEach(node, function (child) {\n    var matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component\n    };\n    var match = matchPath$1(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node, function (child) {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n  return matchedNode;\n}\nfunction matchComponent(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath$1(pathname, matchProps);\n  return match;\n}\nvar IonRouterInner = /*#__PURE__*/function (_React$PureComponent3) {\n  _inherits(IonRouterInner, _React$PureComponent3);\n  var _super4 = _createSuper(IonRouterInner);\n  function IonRouterInner(props) {\n    var _this7;\n    _classCallCheck(this, IonRouterInner);\n    _this7 = _super4.call(this, props);\n    _this7.exitViewFromOtherOutletHandlers = [];\n    _this7.locationHistory = new LocationHistory();\n    _this7.viewStack = new ReactRouterViewStack();\n    _this7.routeMangerContextState = {\n      canGoBack: function canGoBack() {\n        return _this7.locationHistory.canGoBack();\n      },\n      clearOutlet: _this7.viewStack.clear,\n      findViewItemByPathname: _this7.viewStack.findViewItemByPathname,\n      getChildrenToRender: _this7.viewStack.getChildrenToRender,\n      goBack: function goBack() {\n        return _this7.handleNavigateBack();\n      },\n      createViewItem: _this7.viewStack.createViewItem,\n      findViewItemByRouteInfo: _this7.viewStack.findViewItemByRouteInfo,\n      findLeavingViewItemByRouteInfo: _this7.viewStack.findLeavingViewItemByRouteInfo,\n      addViewItem: _this7.viewStack.add,\n      unMountViewItem: _this7.viewStack.remove\n    };\n    var routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: _this7.props.location.pathname,\n      search: _this7.props.location.search\n    };\n    _this7.locationHistory.add(routeInfo);\n    _this7.handleChangeTab = _this7.handleChangeTab.bind(_assertThisInitialized(_this7));\n    _this7.handleResetTab = _this7.handleResetTab.bind(_assertThisInitialized(_this7));\n    _this7.handleNativeBack = _this7.handleNativeBack.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigate = _this7.handleNavigate.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigateBack = _this7.handleNavigateBack.bind(_assertThisInitialized(_this7));\n    _this7.props.registerHistoryListener(_this7.handleHistoryChange.bind(_assertThisInitialized(_this7)));\n    _this7.handleSetCurrentTab = _this7.handleSetCurrentTab.bind(_assertThisInitialized(_this7));\n    _this7.state = {\n      routeInfo: routeInfo\n    };\n    return _this7;\n  }\n  _createClass(IonRouterInner, [{\n    key: \"handleChangeTab\",\n    value: function handleChangeTab(tab, path, routeOptions) {\n      if (!path) {\n        return;\n      }\n      var routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n      var _path$split = path.split('?'),\n        _path$split2 = _slicedToArray(_path$split, 2),\n        pathname = _path$split2[0],\n        search = _path$split2[1];\n      if (routeInfo) {\n        this.incomingRouteParams = Object.assign(Object.assign({}, routeInfo), {\n          routeAction: 'push',\n          routeDirection: 'none'\n        });\n        if (routeInfo.pathname === pathname) {\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n        } else {\n          this.incomingRouteParams.pathname = pathname;\n          this.incomingRouteParams.search = search ? '?' + search : undefined;\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(pathname + (search ? '?' + search : ''));\n        }\n      } else {\n        this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n      }\n    }\n  }, {\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var _a, _b, _c;\n      var leavingLocationInfo;\n      if (this.incomingRouteParams) {\n        if (this.incomingRouteParams.routeAction === 'replace') {\n          leavingLocationInfo = this.locationHistory.previous();\n        } else {\n          leavingLocationInfo = this.locationHistory.current();\n        }\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n      var leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n      if (leavingUrl !== location.pathname) {\n        if (!this.incomingRouteParams) {\n          if (action === 'REPLACE') {\n            this.incomingRouteParams = {\n              routeAction: 'replace',\n              routeDirection: 'none',\n              tab: this.currentTab\n            };\n          }\n          if (action === 'POP') {\n            var currentRoute = this.locationHistory.current();\n            if (currentRoute && currentRoute.pushedByRoute) {\n              var prevInfo = this.locationHistory.findLastLocation(currentRoute);\n              this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n                routeAction: 'pop',\n                routeDirection: 'back'\n              });\n            } else {\n              this.incomingRouteParams = {\n                routeAction: 'pop',\n                routeDirection: 'none',\n                tab: this.currentTab\n              };\n            }\n          }\n          if (!this.incomingRouteParams) {\n            this.incomingRouteParams = {\n              routeAction: 'push',\n              routeDirection: ((_a = location.state) === null || _a === void 0 ? void 0 : _a.direction) || 'forward',\n              routeOptions: (_b = location.state) === null || _b === void 0 ? void 0 : _b.routerOptions,\n              tab: this.currentTab\n            };\n          }\n        }\n        var routeInfo;\n        if ((_c = this.incomingRouteParams) === null || _c === void 0 ? void 0 : _c.id) {\n          routeInfo = Object.assign(Object.assign({}, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname\n          });\n          this.locationHistory.add(routeInfo);\n        } else {\n          var isPushed = this.incomingRouteParams.routeAction === 'push' && this.incomingRouteParams.routeDirection === 'forward';\n          routeInfo = Object.assign(Object.assign({\n            id: generateId('routeInfo')\n          }, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname,\n            pathname: location.pathname,\n            search: location.search,\n            params: this.props.match.params,\n            prevRouteLastPathname: leavingLocationInfo.lastPathname\n          });\n          if (isPushed) {\n            routeInfo.tab = leavingLocationInfo.tab;\n            routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n          } else if (routeInfo.routeAction === 'pop') {\n            var r = this.locationHistory.findLastLocation(routeInfo);\n            routeInfo.pushedByRoute = r === null || r === void 0 ? void 0 : r.pushedByRoute;\n          } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n            // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n            var lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n            routeInfo.pushedByRoute = lastRoute === null || lastRoute === void 0 ? void 0 : lastRoute.pushedByRoute;\n          } else if (routeInfo.routeAction === 'replace') {\n            // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n            var currentRouteInfo = this.locationHistory.current();\n            /**\n             * If going from /home to /child, then replacing from\n             * /child to /home, we don't want the route info to\n             * say that /home was pushed by /home which is not correct.\n             */\n            var currentPushedBy = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pushedByRoute;\n            var pushedByRoute = currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname ? currentPushedBy : routeInfo.pushedByRoute;\n            routeInfo.lastPathname = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pathname) || routeInfo.lastPathname;\n            routeInfo.prevRouteLastPathname = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.lastPathname;\n            routeInfo.pushedByRoute = pushedByRoute;\n            routeInfo.routeDirection = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeDirection) || routeInfo.routeDirection;\n            routeInfo.routeAnimation = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeAnimation) || routeInfo.routeAnimation;\n          }\n          this.locationHistory.add(routeInfo);\n        }\n        this.setState({\n          routeInfo: routeInfo\n        });\n      }\n      this.incomingRouteParams = undefined;\n    }\n    /**\n     * history@4.x uses goBack(), history@5.x uses back()\n     * TODO: If support for React Router <=5 is dropped\n     * this logic is no longer needed. We can just\n     * assume back() is available.\n     */\n  }, {\n    key: \"handleNativeBack\",\n    value: function handleNativeBack() {\n      var history = this.props.history;\n      var goBack = history.goBack || history.back;\n      goBack();\n    }\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(path, routeAction, routeDirection, routeAnimation, routeOptions, tab) {\n      this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n        routeAction: routeAction,\n        routeDirection: routeDirection,\n        routeOptions: routeOptions,\n        routeAnimation: routeAnimation,\n        tab: tab\n      });\n      if (routeAction === 'push') {\n        this.props.history.push(path);\n      } else {\n        this.props.history.replace(path);\n      }\n    }\n  }, {\n    key: \"handleNavigateBack\",\n    value: function handleNavigateBack() {\n      var defaultHref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n      var routeAnimation = arguments.length > 1 ? arguments[1] : undefined;\n      var config = getConfig();\n      defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref');\n      var routeInfo = this.locationHistory.current();\n      if (routeInfo && routeInfo.pushedByRoute) {\n        var prevInfo = this.locationHistory.findLastLocation(routeInfo);\n        if (prevInfo) {\n          this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n            routeAction: 'pop',\n            routeDirection: 'back',\n            routeAnimation: routeAnimation || routeInfo.routeAnimation\n          });\n          if (routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          /**\n           * We need to exclude tab switches/tab\n           * context changes here because tabbed\n           * navigation is not linear, but router.back()\n           * will go back in a linear fashion.\n           */\n          prevInfo.pathname === routeInfo.pushedByRoute && routeInfo.tab === '' && prevInfo.tab === '') {\n            /**\n             * history@4.x uses goBack(), history@5.x uses back()\n             * TODO: If support for React Router <=5 is dropped\n             * this logic is no longer needed. We can just\n             * assume back() is available.\n             */\n            var history = this.props.history;\n            var goBack = history.goBack || history.back;\n            goBack();\n          } else {\n            this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n          }\n        } else {\n          this.handleNavigate(defaultHref, 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref, 'pop', 'back');\n      }\n    }\n  }, {\n    key: \"handleResetTab\",\n    value: function handleResetTab(tab, originalHref, originalRouteOptions) {\n      var routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n      if (routeInfo) {\n        var newRouteInfo = Object.assign({}, routeInfo);\n        newRouteInfo.pathname = originalHref;\n        newRouteInfo.routeOptions = originalRouteOptions;\n        this.incomingRouteParams = Object.assign(Object.assign({}, newRouteInfo), {\n          routeAction: 'pop',\n          routeDirection: 'back'\n        });\n        this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n      }\n    }\n  }, {\n    key: \"handleSetCurrentTab\",\n    value: function handleSetCurrentTab(tab) {\n      this.currentTab = tab;\n      var ri = Object.assign({}, this.locationHistory.current());\n      if (ri.tab !== tab) {\n        ri.tab = tab;\n        this.locationHistory.update(ri);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RouteManagerContext.Provider, {\n        value: this.routeMangerContextState\n      }, React.createElement(NavManager, {\n        ionRoute: IonRouteInner,\n        ionRedirect: {},\n        stackManager: StackManager,\n        routeInfo: this.state.routeInfo,\n        onNativeBack: this.handleNativeBack,\n        onNavigateBack: this.handleNavigateBack,\n        onNavigate: this.handleNavigate,\n        onSetCurrentTab: this.handleSetCurrentTab,\n        onChangeTab: this.handleChangeTab,\n        onResetTab: this.handleResetTab,\n        locationHistory: this.locationHistory\n      }, this.props.children));\n    }\n  }]);\n  return IonRouterInner;\n}(React.PureComponent);\nvar IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\nvar IonReactRouter = /*#__PURE__*/function (_React$Component) {\n  _inherits(IonReactRouter, _React$Component);\n  var _super5 = _createSuper(IonReactRouter);\n  function IonReactRouter(props) {\n    var _this8;\n    _classCallCheck(this, IonReactRouter);\n    _this8 = _super5.call(this, props);\n    var history = props.history,\n      rest = __rest(props, [\"history\"]);\n    _this8.history = history || createBrowserHistory(rest);\n    _this8.history.listen(_this8.handleHistoryChange.bind(_assertThisInitialized(_this8)));\n    _this8.registerHistoryListener = _this8.registerHistoryListener.bind(_assertThisInitialized(_this8));\n    return _this8;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactRouter;\n}(React.Component);\nvar IonReactMemoryRouter = /*#__PURE__*/function (_React$Component2) {\n  _inherits(IonReactMemoryRouter, _React$Component2);\n  var _super6 = _createSuper(IonReactMemoryRouter);\n  function IonReactMemoryRouter(props) {\n    var _this9;\n    _classCallCheck(this, IonReactMemoryRouter);\n    _this9 = _super6.call(this, props);\n    _this9.history = props.history;\n    _this9.history.listen(_this9.handleHistoryChange.bind(_assertThisInitialized(_this9)));\n    _this9.registerHistoryListener = _this9.registerHistoryListener.bind(_assertThisInitialized(_this9));\n    return _this9;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactMemoryRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router$1, Object.assign({}, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactMemoryRouter;\n}(React.Component);\nvar IonReactHashRouter = /*#__PURE__*/function (_React$Component3) {\n  _inherits(IonReactHashRouter, _React$Component3);\n  var _super7 = _createSuper(IonReactHashRouter);\n  function IonReactHashRouter(props) {\n    var _this10;\n    _classCallCheck(this, IonReactHashRouter);\n    _this10 = _super7.call(this, props);\n    var history = props.history,\n      rest = __rest(props, [\"history\"]);\n    _this10.history = history || createHashHistory(rest);\n    _this10.history.listen(_this10.handleHistoryChange.bind(_assertThisInitialized(_this10)));\n    _this10.registerHistoryListener = _this10.registerHistoryListener.bind(_assertThisInitialized(_this10));\n    return _this10;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  _createClass(IonReactHashRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n  return IonReactHashRouter;\n}(React.Component);\nexport { IonReactHashRouter, IonReactMemoryRouter, IonReactRouter };","map":{"version":3,"names":["IonRouteInner","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","React","createElement","Route","path","props","exact","computedMatch","PureComponent","ReactRouterViewStack","_ViewStacks","_super2","_this","call","createViewItem","bind","_assertThisInitialized","findViewItemByRouteInfo","findLeavingViewItemByRouteInfo","getChildrenToRender","findViewItemByPathname","outletId","reactElement","routeInfo","page","viewItem","id","generateId","ionPageElement","mount","ionRoute","matchProps","from","component","match","matchPath","pathname","type","IonRoute","disableIonPageManagement","routeData","childProps","ionRouterOutlet","_this2","viewItems","getViewItemsForOutlet","Children","forEach","children","child","find","v","matchComponent$1","map","clonedChild","ViewLifeCycleManager","concat","removeView","remove","cloneElement","undefined","_this$findViewItemByP","findViewItemByPath","mustBeIonRoute","length","_this$findViewItemByP2","lastPathname","_this$findViewItemByP3","forceExact","viewStack","some","matchView","matchDefaultRoute","getAllViewItems","myMatch","url","isExact","params","ViewStacks","matchComponent","node","clonePageElement","leavingViewHtml","html","outerHTML","document","newEl","innerHTML","style","zIndex","ionBackButton","getElementsByTagName","firstChild","StackManager","_React$PureComponent2","_super3","_this3","stackContextValue","registerIonPage","isInOutlet","transitionPage","handlePageTransition","componentDidMount","routerOutletElement","setupRouterOutlet","componentDidUpdate","prevProps","componentWillUnmount","context","clearOutlet","_handlePageTransition","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this4","_a","_b","enteringViewItem","leavingViewItem","enteringRoute","wrap","_callee$","_context","prev","next","commit","setTimeout","prevRouteLastPathname","routeAction","routeDirection","routeOptions","unmount","matchRoute","addViewItem","classList","add","setAttribute","forceUpdate","stop","_x","foundView","_setupRouterOutlet","_callee2","routerOutlet","_this5","canStart","onStart","_callee2$","_context2","config","getConfig","swipeEnabled","get","mode","canGoBack","goBack","swipeHandler","onEnd","_shouldContinue","_x2","_transitionPage","_callee4","direction","newLeavingElement","runCommit","_runCommit","_callee4$","_context4","_runCommit3","_callee3","enteringEl","leavingEl","_callee3$","_context3","deepWait","duration","showGoBack","pushedByRoute","progressAnimation","animationBuilder","routeAnimation","_runCommit2","_x6","_x7","appendChild","removeChild","_x3","_x4","_x5","_this6","only","components","StackContext","Provider","ref","setRef","forwardedRef","current","RouteManagerContext","matchedNode","matchPath$1","IonRouterInner","_React$PureComponent3","_super4","_this7","exitViewFromOtherOutletHandlers","locationHistory","LocationHistory","routeMangerContextState","clear","handleNavigateBack","unMountViewItem","location","search","handleChangeTab","handleResetTab","handleNativeBack","handleNavigate","registerHistoryListener","handleHistoryChange","handleSetCurrentTab","state","tab","getCurrentRouteInfoForTab","_path$split","split","_path$split2","_slicedToArray","incomingRouteParams","Object","assign","history","push","action","leavingLocationInfo","previous","leavingUrl","currentTab","currentRoute","prevInfo","findLastLocation","routerOptions","_c","isPushed","r","lastRoute","currentRouteInfo","currentPushedBy","setState","back","replace","defaultHref","originalHref","originalRouteOptions","getFirstRouteInfoForTab","newRouteInfo","ri","update","NavManager","ionRedirect","stackManager","onNativeBack","onNavigateBack","onNavigate","onSetCurrentTab","onChangeTab","onResetTab","IonRouter","withRouter","displayName","IonReactRouter","_React$Component","_super5","_this8","rest","__rest","createBrowserHistory","listen","locationValue","actionValue","historyListenHandler","cb","Router","Component","IonReactMemoryRouter","_React$Component2","_super6","_this9","Router$1","IonReactHashRouter","_React$Component3","_super7","_this10","createHashHistory"],"sources":["../src/ReactRouter/IonRouteInner.tsx","../src/ReactRouter/ReactRouterViewStack.tsx","../src/ReactRouter/clonePageElement.ts","../src/ReactRouter/StackManager.tsx","../src/ReactRouter/IonRouter.tsx","../src/ReactRouter/IonReactRouter.tsx","../src/ReactRouter/IonReactMemoryRouter.tsx","../src/ReactRouter/IonReactHashRouter.tsx"],"sourcesContent":["import { IonRouteProps } from '@ionic/react';\nimport React from 'react';\nimport { Route } from 'react-router';\n\nexport class IonRouteInner extends React.PureComponent<IonRouteProps> {\n  render() {\n    return (\n      <Route\n        path={this.props.path}\n        exact={this.props.exact}\n        render={this.props.render}\n        computedMatch={(this.props as any).computedMatch}\n      />\n    );\n  }\n}\n","import {\n  IonRoute,\n  RouteInfo,\n  ViewItem,\n  ViewLifeCycleManager,\n  ViewStacks,\n  generateId,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router';\n\nexport class ReactRouterViewStack extends ViewStacks {\n  constructor() {\n    super();\n    this.createViewItem = this.createViewItem.bind(this);\n    this.findViewItemByRouteInfo = this.findViewItemByRouteInfo.bind(this);\n    this.findLeavingViewItemByRouteInfo = this.findLeavingViewItemByRouteInfo.bind(this);\n    this.getChildrenToRender = this.getChildrenToRender.bind(this);\n    this.findViewItemByPathname = this.findViewItemByPathname.bind(this);\n  }\n\n  createViewItem(\n    outletId: string,\n    reactElement: React.ReactElement,\n    routeInfo: RouteInfo,\n    page?: HTMLElement\n  ) {\n    const viewItem: ViewItem = {\n      id: generateId('viewItem'),\n      outletId,\n      ionPageElement: page,\n      reactElement,\n      mount: true,\n      ionRoute: false,\n    };\n\n    const matchProps = {\n      exact: reactElement.props.exact,\n      path: reactElement.props.path || reactElement.props.from,\n      component: reactElement.props.component,\n    };\n\n    const match = matchPath(routeInfo.pathname, matchProps);\n\n    if (reactElement.type === IonRoute) {\n      viewItem.ionRoute = true;\n      viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n    }\n\n    viewItem.routeData = {\n      match,\n      childProps: reactElement.props,\n    };\n\n    return viewItem;\n  }\n\n  getChildrenToRender(outletId: string, ionRouterOutlet: React.ReactElement, routeInfo: RouteInfo) {\n    const viewItems = this.getViewItemsForOutlet(outletId);\n\n    // Sync latest routes with viewItems\n    React.Children.forEach(ionRouterOutlet.props.children, (child: React.ReactElement) => {\n      const viewItem = viewItems.find((v) => {\n        return matchComponent(child, v.routeData.childProps.path || v.routeData.childProps.from);\n      });\n      if (viewItem) {\n        viewItem.reactElement = child;\n      }\n    });\n\n    const children = viewItems.map((viewItem) => {\n      let clonedChild;\n      if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n      } else {\n        const match = matchComponent(viewItem.reactElement, routeInfo.pathname);\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n\n        if (!match && viewItem.routeData.match) {\n          viewItem.routeData.match = undefined;\n          viewItem.mount = false;\n        }\n      }\n\n      return clonedChild;\n    });\n    return children;\n  }\n\n  findViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string) {\n    const { viewItem, match } = this.findViewItemByPath(routeInfo.pathname, outletId);\n    if (viewItem && match) {\n      viewItem.routeData.match = match;\n    }\n    return viewItem;\n  }\n\n  findLeavingViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string, mustBeIonRoute = true) {\n    const { viewItem } = this.findViewItemByPath(\n      routeInfo.lastPathname!,\n      outletId,\n      false,\n      mustBeIonRoute\n    );\n    return viewItem;\n  }\n\n  findViewItemByPathname(pathname: string, outletId?: string) {\n    const { viewItem } = this.findViewItemByPath(pathname, outletId);\n    return viewItem;\n  }\n\n  private findViewItemByPath(\n    pathname: string,\n    outletId?: string,\n    forceExact?: boolean,\n    mustBeIonRoute?: boolean\n  ) {\n    let viewItem: ViewItem | undefined;\n    let match: ReturnType<typeof matchPath> | undefined;\n    let viewStack: ViewItem[];\n\n    if (outletId) {\n      viewStack = this.getViewItemsForOutlet(outletId);\n      viewStack.some(matchView);\n      if (!viewItem) {\n        viewStack.some(matchDefaultRoute);\n      }\n    } else {\n      const viewItems = this.getAllViewItems();\n      viewItems.some(matchView);\n      if (!viewItem) {\n        viewItems.some(matchDefaultRoute);\n      }\n    }\n\n    return { viewItem, match };\n\n    function matchView(v: ViewItem) {\n      if (mustBeIonRoute && !v.ionRoute) {\n        return false;\n      }\n      const matchProps = {\n        exact: forceExact ? true : v.routeData.childProps.exact,\n        path: v.routeData.childProps.path || v.routeData.childProps.from,\n        component: v.routeData.childProps.component,\n      };\n      const myMatch = matchPath(pathname, matchProps);\n      if (myMatch) {\n        viewItem = v;\n        match = myMatch;\n        return true;\n      }\n      return false;\n    }\n\n    function matchDefaultRoute(v: ViewItem) {\n      // try to find a route that doesn't have a path or from prop, that will be our default route\n      if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n        match = {\n          path: pathname,\n          url: pathname,\n          isExact: true,\n          params: {},\n        };\n        viewItem = v;\n        return true;\n      }\n      return false;\n    }\n  }\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","export function clonePageElement(leavingViewHtml: string | HTMLElement) {\n  let html: string;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    const newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    const ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild as HTMLElement;\n  }\n  return undefined;\n}\n","import {\n  RouteInfo,\n  RouteManagerContext,\n  StackContext,\n  StackContextState,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router-dom';\n\nimport { clonePageElement } from './clonePageElement';\n\ninterface StackManagerProps {\n  routeInfo: RouteInfo;\n}\n\ninterface StackManagerState {}\n\nexport class StackManager extends React.PureComponent<StackManagerProps, StackManagerState> {\n  id: string;\n  context!: React.ContextType<typeof RouteManagerContext>;\n  ionRouterOutlet?: React.ReactElement;\n  routerOutletElement: HTMLIonRouterOutletElement | undefined;\n\n  stackContextValue: StackContextState = {\n    registerIonPage: this.registerIonPage.bind(this),\n    isInOutlet: () => true,\n  };\n\n  constructor(props: StackManagerProps) {\n    super(props);\n    this.registerIonPage = this.registerIonPage.bind(this);\n    this.transitionPage = this.transitionPage.bind(this);\n    this.handlePageTransition = this.handlePageTransition.bind(this);\n    this.id = generateId('routerOutlet');\n  }\n\n  componentDidMount() {\n    if (this.routerOutletElement) {\n      this.setupRouterOutlet(this.routerOutletElement);\n      // console.log(`SM Mount - ${this.routerOutletElement.id} (${this.id})`);\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentDidUpdate(prevProps: StackManagerProps) {\n    if (this.props.routeInfo.pathname !== prevProps.routeInfo.pathname) {\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentWillUnmount() {\n    // console.log(`SM UNMount - ${(this.routerOutletElement?.id as any).id} (${this.id})`);\n    this.context.clearOutlet(this.id);\n  }\n\n  async handlePageTransition(routeInfo: RouteInfo) {\n    // If routerOutlet isn't quite ready, give it another try in a moment\n    if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n      setTimeout(() => this.handlePageTransition(routeInfo), 10);\n    } else {\n      let enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      let leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n\n      if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n        leavingViewItem = this.context.findViewItemByPathname(\n          routeInfo.prevRouteLastPathname,\n          this.id\n        );\n      }\n\n      // Check if leavingViewItem should be unmounted\n      if (leavingViewItem) {\n        if (routeInfo.routeAction === 'replace') {\n          leavingViewItem.mount = false;\n        } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n          if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n            leavingViewItem.mount = false;\n          }\n        } else if (routeInfo.routeOptions?.unmount) {\n          leavingViewItem.mount = false;\n        }\n      }\n\n      const enteringRoute = matchRoute(\n        this.ionRouterOutlet?.props.children,\n        routeInfo\n      ) as React.ReactElement;\n      if (enteringViewItem) {\n        enteringViewItem.reactElement = enteringRoute;\n      }\n      if (!enteringViewItem) {\n        if (enteringRoute) {\n          enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n          this.context.addViewItem(enteringViewItem);\n        }\n      }\n      if (enteringViewItem && enteringViewItem.ionPageElement) {\n        this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n      } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n        // If we have a leavingView but no entering view/route, we are probably leaving to\n        // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n        // transition to finish.\n        // setTimeout(() => {\n        if (leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n        // }, 250);\n      }\n\n      this.forceUpdate();\n    }\n  }\n\n  registerIonPage(page: HTMLElement, routeInfo: RouteInfo) {\n    const foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n    if (foundView) {\n      foundView.ionPageElement = page;\n      foundView.ionRoute = true;\n    }\n    this.handlePageTransition(routeInfo);\n  }\n\n  async setupRouterOutlet(routerOutlet: HTMLIonRouterOutletElement) {\n    const canStart = () => {\n      const config = getConfig();\n      const swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n      if (swipeEnabled) {\n        return this.context.canGoBack();\n      } else {\n        return false;\n      }\n    };\n\n    const onStart = () => {\n      this.context.goBack();\n    };\n    routerOutlet.swipeHandler = {\n      canStart,\n      onStart,\n      onEnd: (_shouldContinue) => true,\n    };\n  }\n\n  async transitionPage(\n    routeInfo: RouteInfo,\n    enteringViewItem: ViewItem,\n    leavingViewItem?: ViewItem\n  ) {\n    const routerOutlet = this.routerOutletElement!;\n\n    const direction =\n      routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root'\n        ? undefined\n        : routeInfo.routeDirection;\n\n    if (enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement) {\n      if (\n        leavingViewItem &&\n        leavingViewItem.ionPageElement &&\n        enteringViewItem === leavingViewItem\n      ) {\n        // If a page is transitioning to another version of itself\n        // we clone it so we can have an animation to show\n\n        const match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n        if (match) {\n          const newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n          if (newLeavingElement) {\n            this.routerOutletElement.appendChild(newLeavingElement);\n            await runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n            this.routerOutletElement.removeChild(newLeavingElement);\n          }\n        } else {\n          await runCommit(enteringViewItem.ionPageElement, undefined);\n        }\n      } else {\n        await runCommit(enteringViewItem.ionPageElement, leavingViewItem?.ionPageElement);\n        if (leavingViewItem && leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n\n    async function runCommit(enteringEl: HTMLElement, leavingEl?: HTMLElement) {\n      enteringEl.classList.add('ion-page');\n      enteringEl.classList.add('ion-page-invisible');\n\n      await routerOutlet.commit(enteringEl, leavingEl, {\n        deepWait: true,\n        duration: direction === undefined ? 0 : undefined,\n        direction: direction as any,\n        showGoBack: !!routeInfo.pushedByRoute,\n        progressAnimation: false,\n        animationBuilder: routeInfo.routeAnimation,\n      });\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const ionRouterOutlet = React.Children.only(children) as React.ReactElement;\n    this.ionRouterOutlet = ionRouterOutlet;\n\n    const components = this.context.getChildrenToRender(\n      this.id,\n      this.ionRouterOutlet,\n      this.props.routeInfo,\n      () => {\n        this.forceUpdate();\n      }\n    );\n\n    return (\n      <StackContext.Provider value={this.stackContextValue}>\n        {React.cloneElement(\n          ionRouterOutlet as any,\n          {\n            ref: (node: HTMLIonRouterOutletElement) => {\n              if (ionRouterOutlet.props.setRef) {\n                ionRouterOutlet.props.setRef(node);\n              }\n              if (ionRouterOutlet.props.forwardedRef) {\n                ionRouterOutlet.props.forwardedRef.current = node;\n              }\n              this.routerOutletElement = node;\n              const { ref } = ionRouterOutlet as any;\n              if (typeof ref === 'function') {\n                ref(node);\n              }\n            },\n          },\n          components\n        )}\n      </StackContext.Provider>\n    );\n  }\n\n  static get contextType() {\n    return RouteManagerContext;\n  }\n}\n\nexport default StackManager;\n\nfunction matchRoute(node: React.ReactNode, routeInfo: RouteInfo) {\n  let matchedNode: React.ReactNode;\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    const matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component,\n    };\n    const match = matchPath(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n\n  return matchedNode;\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","import {\n  AnimationBuilder,\n  LocationHistory,\n  NavManager,\n  RouteAction,\n  RouteInfo,\n  RouteManagerContext,\n  RouteManagerContextState,\n  RouterDirection,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport { Action as HistoryAction, Location as HistoryLocation } from 'history';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport { IonRouteInner } from './IonRouteInner';\nimport { ReactRouterViewStack } from './ReactRouterViewStack';\nimport StackManager from './StackManager';\n\nexport interface LocationState {\n  direction?: RouterDirection;\n  routerOptions?: { as?: string; unmount?: boolean };\n}\n\ninterface IonRouteProps extends RouteComponentProps<{}, {}, LocationState> {\n  registerHistoryListener: (\n    cb: (location: HistoryLocation<any>, action: HistoryAction) => void\n  ) => void;\n}\n\ninterface IonRouteState {\n  routeInfo: RouteInfo;\n}\n\nclass IonRouterInner extends React.PureComponent<IonRouteProps, IonRouteState> {\n  currentTab?: string;\n  exitViewFromOtherOutletHandlers: ((pathname: string) => ViewItem | undefined)[] = [];\n  incomingRouteParams?: Partial<RouteInfo>;\n  locationHistory = new LocationHistory();\n  viewStack = new ReactRouterViewStack();\n  routeMangerContextState: RouteManagerContextState = {\n    canGoBack: () => this.locationHistory.canGoBack(),\n    clearOutlet: this.viewStack.clear,\n    findViewItemByPathname: this.viewStack.findViewItemByPathname,\n    getChildrenToRender: this.viewStack.getChildrenToRender,\n    goBack: () => this.handleNavigateBack(),\n    createViewItem: this.viewStack.createViewItem,\n    findViewItemByRouteInfo: this.viewStack.findViewItemByRouteInfo,\n    findLeavingViewItemByRouteInfo: this.viewStack.findLeavingViewItemByRouteInfo,\n    addViewItem: this.viewStack.add,\n    unMountViewItem: this.viewStack.remove,\n  };\n\n  constructor(props: IonRouteProps) {\n    super(props);\n\n    const routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: this.props.location.pathname,\n      search: this.props.location.search,\n    };\n\n    this.locationHistory.add(routeInfo);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleResetTab = this.handleResetTab.bind(this);\n    this.handleNativeBack = this.handleNativeBack.bind(this);\n    this.handleNavigate = this.handleNavigate.bind(this);\n    this.handleNavigateBack = this.handleNavigateBack.bind(this);\n    this.props.registerHistoryListener(this.handleHistoryChange.bind(this));\n    this.handleSetCurrentTab = this.handleSetCurrentTab.bind(this);\n\n    this.state = {\n      routeInfo,\n    };\n  }\n\n  handleChangeTab(tab: string, path?: string, routeOptions?: any) {\n    if (!path) { return; }\n\n    const routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n    const [pathname, search] = path.split('?');\n    if (routeInfo) {\n      this.incomingRouteParams = { ...routeInfo, routeAction: 'push', routeDirection: 'none' };\n      if (routeInfo.pathname === pathname) {\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n      } else {\n        this.incomingRouteParams.pathname = pathname;\n        this.incomingRouteParams.search = search ? '?' + search : undefined;\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(pathname + (search ? '?' + search : ''));\n      }\n    } else {\n      this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n    }\n  }\n\n  handleHistoryChange(location: HistoryLocation<LocationState>, action: HistoryAction) {\n    let leavingLocationInfo: RouteInfo;\n    if (this.incomingRouteParams) {\n      if (this.incomingRouteParams.routeAction === 'replace') {\n        leavingLocationInfo = this.locationHistory.previous();\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n    } else {\n      leavingLocationInfo = this.locationHistory.current();\n    }\n\n    const leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n    if (leavingUrl !== location.pathname) {\n      if (!this.incomingRouteParams) {\n        if (action === 'REPLACE') {\n          this.incomingRouteParams = {\n            routeAction: 'replace',\n            routeDirection: 'none',\n            tab: this.currentTab, // TODO this isn't legit if replacing to a page that is not in the tabs\n          };\n        }\n        if (action === 'POP') {\n          const currentRoute = this.locationHistory.current();\n          if (currentRoute && currentRoute.pushedByRoute) {\n            const prevInfo = this.locationHistory.findLastLocation(currentRoute);\n            this.incomingRouteParams = { ...prevInfo, routeAction: 'pop', routeDirection: 'back' };\n          } else {\n            this.incomingRouteParams = {\n              routeAction: 'pop',\n              routeDirection: 'none',\n              tab: this.currentTab,\n            };\n          }\n        }\n        if (!this.incomingRouteParams) {\n          this.incomingRouteParams = {\n            routeAction: 'push',\n            routeDirection: location.state?.direction || 'forward',\n            routeOptions: location.state?.routerOptions,\n            tab: this.currentTab,\n          };\n        }\n      }\n\n      let routeInfo: RouteInfo;\n\n      if (this.incomingRouteParams?.id) {\n        routeInfo = {\n          ...(this.incomingRouteParams as RouteInfo),\n          lastPathname: leavingLocationInfo.pathname,\n        };\n        this.locationHistory.add(routeInfo);\n      } else {\n        const isPushed =\n          this.incomingRouteParams.routeAction === 'push' &&\n          this.incomingRouteParams.routeDirection === 'forward';\n        routeInfo = {\n          id: generateId('routeInfo'),\n          ...this.incomingRouteParams,\n          lastPathname: leavingLocationInfo.pathname,\n          pathname: location.pathname,\n          search: location.search,\n          params: this.props.match.params,\n          prevRouteLastPathname: leavingLocationInfo.lastPathname,\n        };\n        if (isPushed) {\n          routeInfo.tab = leavingLocationInfo.tab;\n          routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n        } else if (routeInfo.routeAction === 'pop') {\n          const r = this.locationHistory.findLastLocation(routeInfo);\n          routeInfo.pushedByRoute = r?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n          // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n          const lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n          routeInfo.pushedByRoute = lastRoute?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'replace') {\n          // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n          const currentRouteInfo = this.locationHistory.current();\n\n          /**\n           * If going from /home to /child, then replacing from\n           * /child to /home, we don't want the route info to\n           * say that /home was pushed by /home which is not correct.\n           */\n          const currentPushedBy = currentRouteInfo?.pushedByRoute;\n          const pushedByRoute = (currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname) ? currentPushedBy : routeInfo.pushedByRoute;\n\n          routeInfo.lastPathname = currentRouteInfo?.pathname || routeInfo.lastPathname;\n          routeInfo.prevRouteLastPathname = currentRouteInfo?.lastPathname;\n          routeInfo.pushedByRoute = pushedByRoute;\n          routeInfo.routeDirection = currentRouteInfo?.routeDirection || routeInfo.routeDirection;\n          routeInfo.routeAnimation = currentRouteInfo?.routeAnimation || routeInfo.routeAnimation;\n        }\n\n        this.locationHistory.add(routeInfo);\n      }\n\n      this.setState({\n        routeInfo,\n      });\n    }\n\n    this.incomingRouteParams = undefined;\n  }\n\n  /**\n   * history@4.x uses goBack(), history@5.x uses back()\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just\n   * assume back() is available.\n   */\n  handleNativeBack() {\n    const history = this.props.history as any;\n    const goBack = history.goBack || history.back;\n    goBack();\n  }\n\n  handleNavigate(\n    path: string,\n    routeAction: RouteAction,\n    routeDirection?: RouterDirection,\n    routeAnimation?: AnimationBuilder,\n    routeOptions?: any,\n    tab?: string\n  ) {\n    this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n      routeAction,\n      routeDirection,\n      routeOptions,\n      routeAnimation,\n      tab,\n    });\n\n    if (routeAction === 'push') {\n      this.props.history.push(path);\n    } else {\n      this.props.history.replace(path);\n    }\n  }\n\n  handleNavigateBack(defaultHref: string | RouteInfo = '/', routeAnimation?: AnimationBuilder) {\n    const config = getConfig();\n    defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref' as any);\n    const routeInfo = this.locationHistory.current();\n    if (routeInfo && routeInfo.pushedByRoute) {\n      const prevInfo = this.locationHistory.findLastLocation(routeInfo);\n      if (prevInfo) {\n        this.incomingRouteParams = {\n          ...prevInfo,\n          routeAction: 'pop',\n          routeDirection: 'back',\n          routeAnimation: routeAnimation || routeInfo.routeAnimation,\n        };\n        if (\n          routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          (\n            /**\n             * We need to exclude tab switches/tab\n             * context changes here because tabbed\n             * navigation is not linear, but router.back()\n             * will go back in a linear fashion.\n             */\n            prevInfo.pathname === routeInfo.pushedByRoute &&\n            routeInfo.tab === '' && prevInfo.tab === ''\n          )\n        ) {\n          /**\n           * history@4.x uses goBack(), history@5.x uses back()\n           * TODO: If support for React Router <=5 is dropped\n           * this logic is no longer needed. We can just\n           * assume back() is available.\n           */\n          const history = this.props.history as any;\n          const goBack = history.goBack || history.back;\n          goBack();\n        } else {\n          this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref as string, 'pop', 'back');\n      }\n    } else {\n      this.handleNavigate(defaultHref as string, 'pop', 'back');\n    }\n  }\n\n  handleResetTab(tab: string, originalHref: string, originalRouteOptions: any) {\n    const routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n    if (routeInfo) {\n      const newRouteInfo = { ...routeInfo };\n      newRouteInfo.pathname = originalHref;\n      newRouteInfo.routeOptions = originalRouteOptions;\n      this.incomingRouteParams = { ...newRouteInfo, routeAction: 'pop', routeDirection: 'back' };\n      this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n    }\n  }\n\n  handleSetCurrentTab(tab: string) {\n    this.currentTab = tab;\n    const ri = { ...this.locationHistory.current() };\n    if (ri.tab !== tab) {\n      ri.tab = tab;\n      this.locationHistory.update(ri);\n    }\n  }\n\n  render() {\n    return (\n      <RouteManagerContext.Provider value={this.routeMangerContextState}>\n        <NavManager\n          ionRoute={IonRouteInner}\n          ionRedirect={{}}\n          stackManager={StackManager}\n          routeInfo={this.state.routeInfo!}\n          onNativeBack={this.handleNativeBack}\n          onNavigateBack={this.handleNavigateBack}\n          onNavigate={this.handleNavigate}\n          onSetCurrentTab={this.handleSetCurrentTab}\n          onChangeTab={this.handleChangeTab}\n          onResetTab={this.handleResetTab}\n          locationHistory={this.locationHistory}\n        >\n          {this.props.children}\n        </NavManager>\n      </RouteManagerContext.Provider>\n    );\n  }\n}\n\nexport const IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createBrowserHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactRouter extends React.Component<IonReactRouterProps> {\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n  history: History;\n\n  constructor(props: IonReactRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n /**\n  * history@4.x passes separate location and action\n  * params. history@5.x passes location and action\n  * together as a single object.\n  * TODO: If support for React Router <=5 is dropped\n  * this logic is no longer needed. We can just assume\n  * a single object with both location and action.\n  */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n   const locationValue = (location as any).location || location;\n   const actionValue = (location as any).action || action;\n   if (this.historyListenHandler) {\n     this.historyListenHandler(locationValue, actionValue);\n   }\n }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import { Action as HistoryAction, Location as HistoryLocation, MemoryHistory } from 'history';\nimport React from 'react';\nimport { MemoryRouterProps, Router } from 'react-router';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactMemoryRouterProps extends MemoryRouterProps {\n  history: MemoryHistory;\n}\n\nexport class IonReactMemoryRouter extends React.Component<IonReactMemoryRouterProps> {\n  history: MemoryHistory;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactMemoryRouterProps) {\n    super(props);\n    this.history = props.history;\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createHashHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactHashRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactHashRouter extends React.Component<IonReactHashRouterProps> {\n  history: History;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactHashRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}