{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n\n`;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n  const renderEventContent = eventInfo => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    id: entry.id,\n    classNames: entry.completed ? 'completed' : 'not-completed' // add classNames based on completion status\n  }));\n\n  const CalendarContainer = styled.div`\n  font-size: 0.8rem;\n  .fc-day-grid-event {\n    height: calc(100% - 2px);\n  }\n`;\n  const eventRender = info => {\n    if (info.event.extendedProps.completed) {\n      info.el.style.backgroundColor = 'blue'; // set blue background for completed tasks\n    } else {\n      info.el.style.backgroundColor = 'green'; // set green background for incomplete tasks\n    }\n  };\n\n  const handleEventContent = arg => {\n    const {\n      event\n    } = arg;\n    const backgroundColor = event.extendedProps.completed ? theme.palette.primary.main : theme.palette.success.main;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fc-content\",\n      style: {\n        backgroundColor,\n        border: 'none',\n        // remove the border\n        fontSize: '0.9rem',\n        // set the font size\n        padding: '0.2rem',\n        // set the padding\n        borderRadius: '0.3rem' // set the border radius\n      },\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      eventContent: renderEventContent,\n      eventTextColor: \"white\",\n      height: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"79ky0+wRV+GoCvG2gWqwbOBZ/CM=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","jsxDEV","_jsxDEV","CalendarContainer","div","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","entriesRef","collection","doc","unsubscribe","onSnapshot","_ref","docs","map","renderEventContent","eventInfo","children","event","title","fileName","_jsxFileName","lineNumber","columnNumber","events","entry","date","Date","id","classNames","completed","eventRender","info","extendedProps","el","style","backgroundColor","handleEventContent","arg","theme","palette","primary","main","success","className","border","fontSize","padding","borderRadius","plugins","initialView","eventClick","handleEventClick","eventContent","eventTextColor","height","_c","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n\n`;\n\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n      \n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n\n    return unsubscribe; // Cleanup the listener when the component unmounts\n\n  }, [userId]);\n  const renderEventContent = (eventInfo: any) => {\n    return (\n      <div>\n        {eventInfo.event.title}\n      </div>\n    );\n  };\n  \n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    id: entry.id,\n    classNames: entry.completed ? 'completed' : 'not-completed' // add classNames based on completion status\n  }));\n\n  const CalendarContainer = styled.div`\n  font-size: 0.8rem;\n  .fc-day-grid-event {\n    height: calc(100% - 2px);\n  }\n`;\n\n  \n  const eventRender = (info: any) => {\n    if (info.event.extendedProps.completed) {\n      info.el.style.backgroundColor = 'blue'; // set blue background for completed tasks\n    } else {\n      info.el.style.backgroundColor = 'green'; // set green background for incomplete tasks\n    }\n  };\n\n  const handleEventContent = (arg: EventContentArg) => {\n    const { event } = arg;\n    const backgroundColor = event.extendedProps.completed ? theme.palette.primary.main : theme.palette.success.main;\n    return (\n      <div\n        className=\"fc-content\"\n        style={{\n          backgroundColor,\n          border: 'none', // remove the border\n          fontSize: '0.9rem', // set the font size\n          padding: '0.2rem', // set the padding\n          borderRadius: '0.3rem' // set the border radius\n        }}\n      >\n        {event.title}\n      </div>\n    );\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          events={events}\n          eventClick={handleEventClick}\n          eventContent={renderEventContent}\n          eventTextColor=\"white\"\n          height='500px'\n        />\n\n      )}\n    </CalendarContainer>\n  );\n};\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}