{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [addingEntry, setAddingEntry] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    // convert Firestore Timestamp to JavaScript Date\n    id: entry.id,\n    // add the entry id to the event object\n    backgroundColor: entry.completed ? 'blue' : 'green',\n    // set the event background color based on completion status\n    borderColor: entry.completed ? 'darkblue' : 'darkgreen' // set the event border color based on completion status\n  }));\n\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDateClick = arg => {\n    if (arg === null || arg === void 0 ? void 0 : arg.date) {\n      const date = arg.date.toISOString();\n      const newEntry = {\n        title: '',\n        date,\n        content: '',\n        completed: false\n      };\n      setAddingEntry(true);\n      firestore.collection('users').doc(userId).collection('entries').add(newEntry).then(() => {\n        setAddingEntry(false);\n      }).catch(error => {\n        console.error('Error adding entry: ', error);\n        setAddingEntry(false);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      dateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"VjT63m6y/x7zFb0dewRdXvl2kWI=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","jsxDEV","_jsxDEV","CalendarContainer","div","_c","Calendar","_s","userId","entries","setEntries","loading","setLoading","addingEntry","setAddingEntry","history","entriesRef","collection","doc","unsubscribe","onSnapshot","_ref","docs","map","events","entry","title","date","Date","id","backgroundColor","completed","borderColor","handleEventClick","_ref2","event","push","handleDateClick","arg","toISOString","newEntry","content","add","then","catch","error","console","children","plugins","initialView","eventClick","dateClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [addingEntry, setAddingEntry] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n      \n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n\n    return unsubscribe; // Cleanup the listener when the component unmounts\n\n  }, [userId]);\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date), // convert Firestore Timestamp to JavaScript Date\n    id: entry.id, // add the entry id to the event object\n    backgroundColor: entry.completed ? 'blue' : 'green', // set the event background color based on completion status\n    borderColor: entry.completed ? 'darkblue' : 'darkgreen', // set the event border color based on completion status\n  }));\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDateClick = (arg?: any) => {\n    if (arg?.date) {\n      const date = arg.date.toISOString();\n      const newEntry = { title: '', date, content: '', completed: false };\n      setAddingEntry(true);\n      firestore\n        .collection('users')\n        .doc(userId)\n        .collection('entries')\n        .add(newEntry)\n        .then(() => {\n          setAddingEntry(false);\n        })\n        .catch((error) => {\n          console.error('Error adding entry: ', error);\n          setAddingEntry(false);\n        });\n    }\n  };\n  \n\n  return (\n    <CalendarContainer>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        eventClick={handleEventClick}\n        dateClick={handleDateClick}      />\n    </CalendarContainer>\n  );\n  \n};\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}