{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst CardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin-top: 20px;\n`;\n_c2 = CardContainer;\nconst Card = styled.div`\n  background-color: #fff;\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1);\n  margin: 10px;\n  padding: 10px;\n  width: 200px;\n`;\n_c3 = Card;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const [selectedDate, setSelectedDate] = useState();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n\n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n    return unsubscribe; // Cleanup the listener when the component unmounts\n  }, [userId]);\n  const handleDayClick = arg => {\n    setSelectedDate(arg.date);\n  };\n  const filteredEntries = entries.filter(entry => selectedDate && entry.date.toDate().toLocaleDateString() === selectedDate.toLocaleDateString());\n  const entryCards = filteredEntries.map(entry => /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: entry.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: entry.date.toDate().toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push(`/my/entries/view/${entry.id}`),\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, entry.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: entries.map(entry => ({\n          title: entry.title,\n          date: new Date(entry.date),\n          id: entry.id,\n          classNames: entry.completed ? 'completed' : 'not-completed'\n        })),\n        eventClick: _ref2 => {\n          let {\n            event\n          } = _ref2;\n          return history.push(`/my/entries/view/${event.id}`);\n        },\n        dayClick: handleDayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Entries for \", selectedDate.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n          children: entryCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"6QvbAxXE4o7rZcrVaEKQtB5uWkU=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c4 = Calendar;\nexport default Calendar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"CardContainer\");\n$RefreshReg$(_c3, \"Card\");\n$RefreshReg$(_c4, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarContainer","div","_c","CardContainer","_c2","Card","_c3","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","selectedDate","setSelectedDate","entriesRef","collection","doc","unsubscribe","onSnapshot","_ref","docs","map","handleDayClick","arg","date","filteredEntries","filter","entry","toDate","toLocaleDateString","entryCards","children","title","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","onClick","push","id","plugins","initialView","events","Date","classNames","completed","eventClick","_ref2","event","dayClick","_c4","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './calendarstyle.css';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin-top: 20px;\n`;\n\nconst Card = styled.div`\n  background-color: #fff;\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1);\n  margin: 10px;\n  padding: 10px;\n  width: 200px;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const [selectedDate, setSelectedDate] = useState<Date>();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n      \n    // Listen to changes in the collection and update the entries state\n    const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n\n    return unsubscribe; // Cleanup the listener when the component unmounts\n\n  }, [userId]);\n\n  const handleDayClick = (arg: any) => {\n    setSelectedDate(arg.date);\n  };\n\n  const filteredEntries = entries.filter(\n    (entry) =>\n      selectedDate &&\n      entry.date.toDate().toLocaleDateString() === selectedDate.toLocaleDateString()\n  );\n\n  const entryCards = filteredEntries.map((entry) => (\n    <Card key={entry.id}>\n      <h3>{entry.title}</h3>\n      <p>{entry.date.toDate().toLocaleString()}</p>\n      <button onClick={() => history.push(`/my/entries/view/${entry.id}`)}>\n        View\n      </button>\n    </Card>\n  ));\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <div>\n          <FullCalendar\n            plugins={[dayGridPlugin]}\n            initialView=\"dayGridMonth\"\n            events={entries.map((entry) => ({\n              title: entry.title,\n              date: new Date(entry.date),\n              id: entry.id,\n              classNames: entry.completed ? 'completed' : 'not-completed'\n            }))}\n            eventClick={({ event }) =>\n              history.push(`/my/entries/view/${event.id}`)\n            }\n            dayClick={handleDayClick}\n          />\n          {selectedDate && (\n            <>\n              <h2>Entries for {selectedDate.toLocaleDateString()}</h2>\n              <CardContainer>{entryCards}</CardContainer>\n            </>\n          )}\n        </div>\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}