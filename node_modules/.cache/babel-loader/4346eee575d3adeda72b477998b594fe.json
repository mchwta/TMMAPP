{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IonCard, IonCardHeader, IonCardTitle, IonCardContent } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n    entriesRef.get().then(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const eventRender = _ref3 => {\n    let {\n      event\n    } = _ref3;\n    const entryId = event.id;\n    const entry = entries.find(entry => entry.id === entryId);\n    if (entry) {\n      return /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: entry.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, entryId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: entries.map(entry => ({\n        title: entry.title,\n        date: new Date(entry.date),\n        // convert Firestore Timestamp to JavaScript Date\n        id: entry.id // add the entry id to the event object\n      })),\n\n      eventClick: handleEventClick // attach the click event handler\n      ,\n      eventRender: eventRender // attach the event render callback\n      ,\n      lazyFetching: true // fetch events for the visible range of dates\n      ,\n      height: \"450px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"79ky0+wRV+GoCvG2gWqwbOBZ/CM=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","IonCard","IonCardHeader","IonCardTitle","IonCardContent","jsxDEV","_jsxDEV","CalendarContainer","div","_c","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","entriesRef","collection","doc","get","then","_ref","docs","map","handleEventClick","_ref2","event","push","id","eventRender","_ref3","entryId","entry","find","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","plugins","initialView","events","date","Date","eventClick","lazyFetching","height","_c2","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IonCard, IonCardHeader, IonCardTitle, IonCardContent } from '@ionic/react';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n    entriesRef.get().then(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const eventRender = ({ event }: { event: any }) => {\n    const entryId = event.id;\n    const entry = entries.find((entry) => entry.id === entryId);\n    if (entry) {\n      return (\n        <IonCard key={entryId}>\n          <IonCardHeader>\n            <IonCardTitle>{entry.title}</IonCardTitle>\n          </IonCardHeader>\n          <IonCardContent>{entry.description}</IonCardContent>\n        </IonCard>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          events={entries.map((entry) => ({\n            title: entry.title,\n            date: new Date(entry.date), // convert Firestore Timestamp to JavaScript Date\n            id: entry.id // add the entry id to the event object\n          }))}\n          eventClick={handleEventClick} // attach the click event handler\n          eventRender={eventRender} // attach the event render callback\n          lazyFetching={true} // fetch events for the visible range of dates\n          height='450px'\n        />\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}