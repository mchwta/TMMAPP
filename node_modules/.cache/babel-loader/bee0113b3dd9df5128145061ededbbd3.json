{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IonCard, IonCardHeader, IonCardTitle, IonCardContent } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n    entriesRef.get().then(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    // convert Firestore Timestamp to JavaScript Date\n    id: entry.id // add the entry id to the event object\n  }));\n\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDayRender = info => {\n    const date = info.date;\n    const entriesOnThisDate = entries.filter(entry => new Date(entry.date).toDateString() === date.toDateString());\n    const content = entriesOnThisDate.map(entry => /*#__PURE__*/_jsxDEV(IonCard, {\n      onClick: () => history.push(`/my/entries/view/${entry.id}`),\n      children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n        children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n          children: entry.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n        children: entry.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, entry.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this));\n    info.el.querySelector('.fc-daygrid-day-top').appendChild(content);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick // attach the click event handler\n      ,\n      dayRender: handleDayRender // attach the dayRender function\n      ,\n      lazyFetching: true // fetch events for the visible range of dates\n      ,\n      height: \"450px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"79ky0+wRV+GoCvG2gWqwbOBZ/CM=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","IonCard","IonCardHeader","IonCardTitle","IonCardContent","jsxDEV","_jsxDEV","CalendarContainer","div","_c","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","entriesRef","collection","doc","get","then","_ref","docs","map","events","entry","title","date","Date","id","handleEventClick","_ref2","event","push","handleDayRender","info","entriesOnThisDate","filter","toDateString","content","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","description","el","querySelector","appendChild","plugins","initialView","eventClick","dayRender","lazyFetching","height","_c2","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IonCard, IonCardHeader, IonCardTitle, IonCardContent } from '@ionic/react';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n    entriesRef.get().then(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date), // convert Firestore Timestamp to JavaScript Date\n    id: entry.id // add the entry id to the event object\n  }));\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDayRender = (info: any) => {\n    const date = info.date;\n    const entriesOnThisDate = entries.filter(entry => new Date(entry.date).toDateString() === date.toDateString());\n    const content = entriesOnThisDate.map(entry => (\n      <IonCard key={entry.id} onClick={() => history.push(`/my/entries/view/${entry.id}`)}>\n        <IonCardHeader>\n          <IonCardTitle>{entry.title}</IonCardTitle>\n        </IonCardHeader>\n        <IonCardContent>{entry.description}</IonCardContent>\n      </IonCard>\n    ));\n    info.el.querySelector('.fc-daygrid-day-top').appendChild(content);\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          events={events}\n          eventClick={handleEventClick} // attach the click event handler\n          dayRender={handleDayRender} // attach the dayRender function\n          lazyFetching={true} // fetch events for the visible range of dates\n          height='450px'\n        />\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}