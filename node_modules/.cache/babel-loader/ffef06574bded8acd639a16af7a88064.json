{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth as firebaseAuth } from './firebase'; // most components will use this,\n// if user is logged in and what is the userId\n\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  loggedIn: false\n});\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function useAuthInit() {\n  _s2();\n\n  const [authInit, setAuthInit] = useState({\n    loading: true\n  });\n  useEffect(() => {\n    return firebaseAuth.onAuthStateChanged(firebaseUser => {\n      // setAuthInit({loading: false, auth: {loggedIn: Boolean(user)}});\n      const auth = firebaseUser ? {\n        loggedIn: true,\n        userId: firebaseUser.uid\n      } : {\n        loggedIn: false\n      };\n      setAuthInit({\n        loading: false,\n        auth\n      });\n    });\n  }, []); // const [authState, setAuthInit] = useState<AuthInit>({loading: true});\n  // useEffect(() => {\n  //   return firebaseAuth.onAuthStateChanged((firebaseUser) => {\n  //         const auth = firebaseUser ?\n  //             {loggedIn: true, userId: firebaseUser.uid } :\n  //             {loggedIn: false};\n  //         setAuthInit({loading: false, auth});\n  //   });\n  // }, []);\n\n  return authInit;\n} // export function useAuthInit(): AuthInit {\n//   const [authInit, setAuthInit] = useState<AuthInit>({ loading: true, loggedIn: false });\n//     useEffect(() => {\n//       firebaseAuth.onAuthStateChanged((user) => {\n//           setAuthInit({loading: false, loggedIn: Boolean(user)});\n//         });\n//       },[]);\n//   return authInit;\n// }\n\n_s2(useAuthInit, \"n1nc+QcX/uYJlKNIfN1ntTL3qE0=\");","map":{"version":3,"sources":["/Users/hninwintthuaung/Downloads/DailyMoments/src/auth.ts"],"names":["React","useContext","useEffect","useState","auth","firebaseAuth","AuthContext","createContext","loggedIn","useAuth","useAuthInit","authInit","setAuthInit","loading","onAuthStateChanged","firebaseUser","userId","uid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAI,IAAIC,YAAjB,QAAqC,YAArC,C,CAEA;AACA;;AAYA,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,CAA0B;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAA1B,CAApB;AAEP,OAAO,SAASC,OAAT,GAAyB;AAAA;;AAC5B,SAAOR,UAAU,CAACK,WAAD,CAAjB;AACH;;GAFeG,O;;AAIhB,OAAO,SAASC,WAAT,GAAiC;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAW;AAACU,IAAAA,OAAO,EAAE;AAAV,GAAX,CAAxC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOG,YAAY,CAACS,kBAAb,CAAiCC,YAAD,IAAkB;AACrD;AACA,YAAMX,IAAI,GAAGW,YAAY,GACvB;AAAEP,QAAAA,QAAQ,EAAG,IAAb;AAAmBQ,QAAAA,MAAM,EAAED,YAAY,CAACE;AAAxC,OADuB,GAEvB;AAAET,QAAAA,QAAQ,EAAE;AAAZ,OAFF;AAGAI,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBT,QAAAA;AAAlB,OAAD,CAAX;AACD,KANI,CAAP;AAOC,GARM,EAQL,EARK,CAAT,CAFsC,CAYtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOO,QAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAhCgBD,W","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { auth as firebaseAuth } from './firebase'; \r\n\r\n// most components will use this,\r\n// if user is logged in and what is the userId\r\ninterface Auth {\r\n  loggedIn: boolean;\r\n  userId?: string; // ? is optional\r\n}\r\n\r\n// Only used by App to initialize the firebase authentication\r\ninterface AuthInit {\r\n  loading: boolean;\r\n  auth?: Auth;\r\n}\r\n\r\nexport const AuthContext = React.createContext<Auth>({loggedIn:false});\r\n\r\nexport function useAuth(): Auth {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function useAuthInit(): AuthInit {\r\n  const [authInit, setAuthInit] = useState<AuthInit>({loading: true});\r\n  useEffect(() => {\r\n    return firebaseAuth.onAuthStateChanged((firebaseUser) => {\r\n        // setAuthInit({loading: false, auth: {loggedIn: Boolean(user)}});\r\n        const auth = firebaseUser ?\r\n          { loggedIn:  true, userId: firebaseUser.uid} :\r\n          { loggedIn: false };\r\n        setAuthInit({ loading: false, auth});\r\n      });\r\n    },[]);\r\n\r\n  // const [authState, setAuthInit] = useState<AuthInit>({loading: true});\r\n  // useEffect(() => {\r\n  //   return firebaseAuth.onAuthStateChanged((firebaseUser) => {\r\n  //         const auth = firebaseUser ?\r\n  //             {loggedIn: true, userId: firebaseUser.uid } :\r\n  //             {loggedIn: false};\r\n  //         setAuthInit({loading: false, auth});\r\n  //   });\r\n  // }, []);\r\n  return authInit;\r\n}\r\n\r\n// export function useAuthInit(): AuthInit {\r\n//   const [authInit, setAuthInit] = useState<AuthInit>({ loading: true, loggedIn: false });\r\n//     useEffect(() => {\r\n//       firebaseAuth.onAuthStateChanged((user) => {\r\n//           setAuthInit({loading: false, loggedIn: Boolean(user)});\r\n//         });\r\n//       },[]);\r\n//   return authInit;\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}