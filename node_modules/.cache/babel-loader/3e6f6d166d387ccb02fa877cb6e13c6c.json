{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonLabel } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n    entriesRef.get().then(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const eventRender = _ref3 => {\n    let {\n      event\n    } = _ref3;\n    const date = event.start.toISOString().slice(0, 10); // get the date of the event\n    const dateEntries = entries.filter(entry => entry.date.toISOString().slice(0, 10) === date); // get the entries for the date\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), dateEntries.map(entry => /*#__PURE__*/_jsxDEV(IonCard, {\n        onClick: () => history.push(`/my/entries/view/${entry.id}`),\n        children: [/*#__PURE__*/_jsxDEV(IonCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonCardTitle, {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(IonLabel, {\n            children: entry.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, entry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: entries,\n      eventClick: handleEventClick,\n      eventRender: eventRender // attach the eventRender callback\n      ,\n      lazyFetching: true,\n      height: \"450px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"79ky0+wRV+GoCvG2gWqwbOBZ/CM=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","IonCard","IonCardContent","IonCardHeader","IonCardTitle","IonLabel","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarContainer","div","_c","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","entriesRef","collection","doc","get","then","_ref","docs","map","handleEventClick","_ref2","event","push","id","eventRender","_ref3","date","start","toISOString","slice","dateEntries","filter","entry","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","plugins","initialView","events","eventClick","lazyFetching","height","_c2","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Downloads/DailyMoments/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardTitle,\n  IonLabel\n} from '@ionic/react';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n    entriesRef.get().then(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const eventRender = ({ event }: { event: any }) => {\n    const date = event.start.toISOString().slice(0, 10); // get the date of the event\n    const dateEntries = entries.filter(entry => entry.date.toISOString().slice(0, 10) === date); // get the entries for the date\n    return (\n      <>\n        <div>{event.title}</div>\n        {dateEntries.map(entry => (\n          <IonCard key={entry.id} onClick={() => history.push(`/my/entries/view/${entry.id}`)}>\n            <IonCardHeader>\n              <IonCardTitle>{entry.title}</IonCardTitle>\n            </IonCardHeader>\n            <IonCardContent>\n              <IonLabel>{entry.description}</IonLabel>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <FullCalendar\n          plugins={[dayGridPlugin]}\n          initialView=\"dayGridMonth\"\n          events={entries}\n          eventClick={handleEventClick}\n          eventRender={eventRender} // attach the eventRender callback\n          lazyFetching={true}\n          height='450px'\n        />\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}