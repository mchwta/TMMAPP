{"ast":null,"code":"var _jsxFileName = \"/Users/hninwintthuaung/Desktop/School/TMMA App/src/pages/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IonPopover, IonList, IonItem, IonLabel } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n_c = CalendarContainer;\nconst Calendar = () => {\n  _s();\n  const {\n    userId\n  } = useAuth();\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const popoverRef = useRef(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    const entriesRef = firestore.collection('users').doc(userId).collection('entries');\n    entriesRef.get().then(_ref => {\n      let {\n        docs\n      } = _ref;\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n  const events = entries.map(entry => ({\n    title: entry.title,\n    date: new Date(entry.date),\n    // convert Firestore Timestamp to JavaScript Date\n    id: entry.id // add the entry id to the event object\n  }));\n\n  const handleEventClick = _ref2 => {\n    let {\n      event\n    } = _ref2;\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDayRender = _ref3 => {\n    let {\n      date,\n      el\n    } = _ref3;\n    const dateEntries = entries.filter(entry => new Date(entry.date).toDateString() === date.toDateString());\n    if (dateEntries.length > 0) {\n      el.addEventListener('click', () => {\n        var _popoverRef$current;\n        setSelectedDate(date);\n        (_popoverRef$current = popoverRef.current) === null || _popoverRef$current === void 0 ? void 0 : _popoverRef$current.present();\n      });\n      el.classList.add('fc-has-events');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: events,\n        eventClick: handleEventClick // attach the click event handler\n        ,\n        dayRender: handleDayRender // attach the dayRender event handler\n        ,\n        lazyFetching: true // fetch events for the visible range of dates\n        ,\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IonPopover, {\n        ref: popoverRef,\n        isOpen: selectedDate !== null,\n        onDidDismiss: () => setSelectedDate(null),\n        children: /*#__PURE__*/_jsxDEV(IonList, {\n          children: entries.filter(entry => new Date(entry.date).toDateString() === (selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString())).map(entry => /*#__PURE__*/_jsxDEV(IonItem, {\n            routerLink: `/my/entries/view/${entry.id}`,\n            children: /*#__PURE__*/_jsxDEV(IonLabel, {\n              children: entry.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)\n          }, entry.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"T5Qmv+jFXhSxs1ypDcEukWbjm3g=\", false, function () {\n  return [useAuth, useHistory];\n});\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarContainer\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FullCalendar","dayGridPlugin","firestore","toEntry","useAuth","useHistory","styled","IonPopover","IonList","IonItem","IonLabel","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarContainer","div","_c","Calendar","_s","userId","entries","setEntries","loading","setLoading","history","popoverRef","selectedDate","setSelectedDate","entriesRef","collection","doc","get","then","_ref","docs","map","events","entry","title","date","Date","id","handleEventClick","_ref2","event","push","handleDayRender","_ref3","el","dateEntries","filter","toDateString","length","addEventListener","_popoverRef$current","current","present","classList","add","children","plugins","initialView","eventClick","dayRender","lazyFetching","height","fileName","_jsxFileName","lineNumber","columnNumber","ref","isOpen","onDidDismiss","routerLink","_c2","$RefreshReg$"],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App/src/pages/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { firestore } from '../firebase';\nimport { Entry, toEntry } from '../models';\nimport { useAuth } from '../auth';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IonPopover, IonList, IonItem, IonLabel } from '@ionic/react';\n\nconst CalendarContainer = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst Calendar: React.FC = () => {\n  const { userId } = useAuth();\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const popoverRef = useRef<HTMLIonPopoverElement>(null);\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n  useEffect(() => {\n    const entriesRef = firestore\n      .collection('users')\n      .doc(userId)\n      .collection('entries');\n    entriesRef.get().then(({ docs }) => {\n      setEntries(docs.map(toEntry));\n      setLoading(false);\n    });\n  }, [userId]);\n\n  const events = entries.map((entry) => ({\n    title: entry.title,\n    date: new Date(entry.date), // convert Firestore Timestamp to JavaScript Date\n    id: entry.id // add the entry id to the event object\n  }));\n\n  const handleEventClick = ({ event }: { event: any }) => {\n    history.push(`/my/entries/view/${event.id}`); // redirect to the corresponding entry page\n  };\n\n  const handleDayRender = ({ date, el }: { date: Date; el: HTMLElement }) => {\n    const dateEntries = entries.filter(\n      (entry) =>\n        new Date(entry.date).toDateString() === date.toDateString()\n    );\n    if (dateEntries.length > 0) {\n      el.addEventListener('click', () => {\n        setSelectedDate(date);\n        popoverRef.current?.present();\n      });\n      el.classList.add('fc-has-events');\n    }\n  };\n\n  return (\n    <CalendarContainer>\n      {!loading && (\n        <>\n          <FullCalendar\n            plugins={[dayGridPlugin]}\n            initialView=\"dayGridMonth\"\n            events={events}\n            eventClick={handleEventClick} // attach the click event handler\n            dayRender={handleDayRender} // attach the dayRender event handler\n            lazyFetching={true} // fetch events for the visible range of dates\n            height=\"500px\"\n          />\n          <IonPopover\n            ref={popoverRef}\n            isOpen={selectedDate !== null}\n            onDidDismiss={() => setSelectedDate(null)}\n          >\n            <IonList>\n              {entries\n                .filter(\n                  (entry) =>\n                    new Date(entry.date).toDateString() ===\n                    selectedDate?.toDateString()\n                )\n                .map((entry) => (\n                  <IonItem\n                    key={entry.id}\n                    routerLink={`/my/entries/view/${entry.id}`}\n                  >\n                    <IonLabel>{entry.title}</IonLabel>\n                  </IonItem>\n                ))}\n            </IonList>\n          </IonPopover>\n        </>\n      )}\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}