{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import FullCalendar from '@fullcalendar/react';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import { firestore } from '../firebase';\n// import { Entry, toEntry } from '../models';\n// import { useAuth } from '../auth';\n// import { useHistory } from 'react-router-dom';\n// import styled from 'styled-components';\n// import './calendarstyle.css';\n\n// const CalendarContainer = styled.div`\n//   font-size: 0.8rem;\n// `;\n\n// const EntriesContainer = styled.div`\n//   margin-top: 10px;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `;\n\n// const EntryItem = styled.div`\n//   border: 1px solid gray;\n//   padding: 5px;\n//   margin: 5px;\n// `;\n\n// const Calendar: React.FC = () => {\n//   const { userId } = useAuth();\n//   const [entries, setEntries] = useState<Entry[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     const entriesRef = firestore\n//       .collection('users')\n//       .doc(userId)\n//       .collection('entries');\n\n//     // Listen to changes in the collection and update the entries state\n//     const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n//       setEntries(docs.map(toEntry));\n//       setLoading(false);\n//     });\n\n//     return unsubscribe; // Cleanup the listener when the component unmounts\n\n//   }, [userId]);\n\n//   const events = entries.map((entry) => ({\n//     title: entry.title,\n//     date: new Date(entry.date),\n//     id: entry.id,\n//     classNames: entry.completed ? 'completed' : 'not-completed'\n//   }));\n\n//   const handleEventClick = ({ event }: { event: any }) => {\n//     history.push(`/my/entries/view/${event.id}`);\n//     setEntriesList(\n//       <EntryItem key={event.id}>\n//         <div>{event.title}</div>\n//         <div>{new Date(event.date).toLocaleString()}</div>\n//         <div>Completed: {event.classNames === 'completed' ? 'Yes' : 'No'}</div>\n//       </EntryItem>\n//     );\n//   };\n\n//   const handleDateClick = (arg: any) => {\n//     const selectedDate = arg.date;\n//     const selectedEntries = entries.filter(\n//       entry => new Date(entry.date).toDateString() === selectedDate.toDateString()\n//     );\n\n//     const entriesList = selectedEntries.map((entry) => (\n//       <EntryItem key={entry.id}>\n//         <div>{entry.title}</div>\n//         <div>{new Date(entry.date).toLocaleString()}</div>\n//         <div>Completed: {entry.completed ? 'Yes' : 'No'}</div>\n//       </EntryItem>\n//     ));\n\n//     setEntriesList(entriesList);\n//   };\n\n//   const [entriesList, setEntriesList] = useState<JSX.Element[]>([]);\n\n//   return (\n//     <CalendarContainer>\n//       {!loading && (\n//         <>\n//           <FullCalendar\n//             plugins={[dayGridPlugin]}\n//             initialView=\"dayGridMonth\"\n//             events={events}\n//             eventClick={handleEventClick}\n//             dateClick={handleDateClick} // attach the dateClick event handler\n//             eventColor=\"#378006\"\n//             height='500px'\n//           />\n\n//           <EntriesContainer>\n//             {entriesList.length > 0 ? entriesList : <div>Select a date to see entries</div>}\n//           </EntriesContainer>\n//         </>\n//       )}\n//     </CalendarContainer>\n//   );\n// };\n\n// export default Calendar;\n// ``","map":{"version":3,"names":[],"sources":["/Users/hninwintthuaung/Desktop/School/TMMA App 3/src/pages/calendar.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import FullCalendar from '@fullcalendar/react';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import { firestore } from '../firebase';\n// import { Entry, toEntry } from '../models';\n// import { useAuth } from '../auth';\n// import { useHistory } from 'react-router-dom';\n// import styled from 'styled-components';\n// import './calendarstyle.css';\n\n// const CalendarContainer = styled.div`\n//   font-size: 0.8rem;\n// `;\n\n// const EntriesContainer = styled.div`\n//   margin-top: 10px;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `;\n\n// const EntryItem = styled.div`\n//   border: 1px solid gray;\n//   padding: 5px;\n//   margin: 5px;\n// `;\n\n// const Calendar: React.FC = () => {\n//   const { userId } = useAuth();\n//   const [entries, setEntries] = useState<Entry[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     const entriesRef = firestore\n//       .collection('users')\n//       .doc(userId)\n//       .collection('entries');\n      \n//     // Listen to changes in the collection and update the entries state\n//     const unsubscribe = entriesRef.onSnapshot(({ docs }) => {\n//       setEntries(docs.map(toEntry));\n//       setLoading(false);\n//     });\n\n//     return unsubscribe; // Cleanup the listener when the component unmounts\n\n//   }, [userId]);\n\n//   const events = entries.map((entry) => ({\n//     title: entry.title,\n//     date: new Date(entry.date),\n//     id: entry.id,\n//     classNames: entry.completed ? 'completed' : 'not-completed'\n//   }));\n\n//   const handleEventClick = ({ event }: { event: any }) => {\n//     history.push(`/my/entries/view/${event.id}`);\n//     setEntriesList(\n//       <EntryItem key={event.id}>\n//         <div>{event.title}</div>\n//         <div>{new Date(event.date).toLocaleString()}</div>\n//         <div>Completed: {event.classNames === 'completed' ? 'Yes' : 'No'}</div>\n//       </EntryItem>\n//     );\n//   };\n\n//   const handleDateClick = (arg: any) => {\n//     const selectedDate = arg.date;\n//     const selectedEntries = entries.filter(\n//       entry => new Date(entry.date).toDateString() === selectedDate.toDateString()\n//     );\n    \n//     const entriesList = selectedEntries.map((entry) => (\n//       <EntryItem key={entry.id}>\n//         <div>{entry.title}</div>\n//         <div>{new Date(entry.date).toLocaleString()}</div>\n//         <div>Completed: {entry.completed ? 'Yes' : 'No'}</div>\n//       </EntryItem>\n//     ));\n\n//     setEntriesList(entriesList);\n//   };\n\n//   const [entriesList, setEntriesList] = useState<JSX.Element[]>([]);\n\n//   return (\n//     <CalendarContainer>\n//       {!loading && (\n//         <>\n//           <FullCalendar\n//             plugins={[dayGridPlugin]}\n//             initialView=\"dayGridMonth\"\n//             events={events}\n//             eventClick={handleEventClick}\n//             dateClick={handleDateClick} // attach the dateClick event handler\n//             eventColor=\"#378006\"\n//             height='500px'\n//           />\n\n//           <EntriesContainer>\n//             {entriesList.length > 0 ? entriesList : <div>Select a date to see entries</div>}\n//           </EntriesContainer>\n//         </>\n//       )}\n//     </CalendarContainer>\n//   );\n// };\n\n// export default Calendar;\n// ``\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module"}